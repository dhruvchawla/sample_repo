
/**
 * AWBDataEntry.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.7.3  Built on : May 30, 2016 (04:09:26 BST)
 */

            
                package org.datacontract.schemas._2004._07.bd_entities_area;
            

            /**
            *  AWBDataEntry bean class
            */
            @SuppressWarnings({"unchecked","unused"})
        
        public  class AWBDataEntry extends org.datacontract.schemas._2004._07.bd_entities_area.AreaEntity
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AWBDataEntry
                Namespace URI = http://schemas.datacontract.org/2004/07/BD.Entities.Area
                Namespace Prefix = ns10
                */
            

                        /**
                        * field for AWBFee
                        */

                        
                                    protected double localAWBFee ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAWBFeeTracker = false ;

                           public boolean isAWBFeeSpecified(){
                               return localAWBFeeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getAWBFee(){
                               return localAWBFee;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AWBFee
                               */
                               public void setAWBFee(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localAWBFeeTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localAWBFee=param;
                                       

                               }
                            

                        /**
                        * field for AWBFeeAgentCarrier
                        */

                        
                                    protected java.lang.String localAWBFeeAgentCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAWBFeeAgentCarrierTracker = false ;

                           public boolean isAWBFeeAgentCarrierSpecified(){
                               return localAWBFeeAgentCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAWBFeeAgentCarrier(){
                               return localAWBFeeAgentCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AWBFeeAgentCarrier
                               */
                               public void setAWBFeeAgentCarrier(java.lang.String param){
                            localAWBFeeAgentCarrierTracker = true;
                                   
                                            this.localAWBFeeAgentCarrier=param;
                                       

                               }
                            

                        /**
                        * field for ActualWeight
                        */

                        
                                    protected double localActualWeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActualWeightTracker = false ;

                           public boolean isActualWeightSpecified(){
                               return localActualWeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getActualWeight(){
                               return localActualWeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ActualWeight
                               */
                               public void setActualWeight(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localActualWeightTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localActualWeight=param;
                                       

                               }
                            

                        /**
                        * field for AdditionalRefNumber
                        */

                        
                                    protected java.lang.String localAdditionalRefNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAdditionalRefNumberTracker = false ;

                           public boolean isAdditionalRefNumberSpecified(){
                               return localAdditionalRefNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAdditionalRefNumber(){
                               return localAdditionalRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AdditionalRefNumber
                               */
                               public void setAdditionalRefNumber(java.lang.String param){
                            localAdditionalRefNumberTracker = true;
                                   
                                            this.localAdditionalRefNumber=param;
                                       

                               }
                            

                        /**
                        * field for AgentCode
                        */

                        
                                    protected java.lang.String localAgentCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgentCodeTracker = false ;

                           public boolean isAgentCodeSpecified(){
                               return localAgentCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAgentCode(){
                               return localAgentCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AgentCode
                               */
                               public void setAgentCode(java.lang.String param){
                            localAgentCodeTracker = true;
                                   
                                            this.localAgentCode=param;
                                       

                               }
                            

                        /**
                        * field for AmountToCollect
                        */

                        
                                    protected double localAmountToCollect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountToCollectTracker = false ;

                           public boolean isAmountToCollectSpecified(){
                               return localAmountToCollectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getAmountToCollect(){
                               return localAmountToCollect;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmountToCollect
                               */
                               public void setAmountToCollect(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localAmountToCollectTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localAmountToCollect=param;
                                       

                               }
                            

                        /**
                        * field for ApexPrepaidValue
                        */

                        
                                    protected double localApexPrepaidValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApexPrepaidValueTracker = false ;

                           public boolean isApexPrepaidValueSpecified(){
                               return localApexPrepaidValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getApexPrepaidValue(){
                               return localApexPrepaidValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApexPrepaidValue
                               */
                               public void setApexPrepaidValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localApexPrepaidValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localApexPrepaidValue=param;
                                       

                               }
                            

                        /**
                        * field for ApexValue
                        */

                        
                                    protected double localApexValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApexValueTracker = false ;

                           public boolean isApexValueSpecified(){
                               return localApexValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getApexValue(){
                               return localApexValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApexValue
                               */
                               public void setApexValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localApexValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localApexValue=param;
                                       

                               }
                            

                        /**
                        * field for AwbDate
                        */

                        
                                    protected java.util.Calendar localAwbDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAwbDateTracker = false ;

                           public boolean isAwbDateSpecified(){
                               return localAwbDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getAwbDate(){
                               return localAwbDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AwbDate
                               */
                               public void setAwbDate(java.util.Calendar param){
                            localAwbDateTracker = true;
                                   
                                            this.localAwbDate=param;
                                       

                               }
                            

                        /**
                        * field for AwbNumber
                        */

                        
                                    protected java.lang.String localAwbNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAwbNumberTracker = false ;

                           public boolean isAwbNumberSpecified(){
                               return localAwbNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAwbNumber(){
                               return localAwbNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AwbNumber
                               */
                               public void setAwbNumber(java.lang.String param){
                            localAwbNumberTracker = true;
                                   
                                            this.localAwbNumber=param;
                                       

                               }
                            

                        /**
                        * field for BaggedInLocation
                        */

                        
                                    protected java.lang.String localBaggedInLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBaggedInLocationTracker = false ;

                           public boolean isBaggedInLocationSpecified(){
                               return localBaggedInLocationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBaggedInLocation(){
                               return localBaggedInLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BaggedInLocation
                               */
                               public void setBaggedInLocation(java.lang.String param){
                            localBaggedInLocationTracker = true;
                                   
                                            this.localBaggedInLocation=param;
                                       

                               }
                            

                        /**
                        * field for BatchCount
                        */

                        
                                    protected java.lang.String localBatchCount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBatchCountTracker = false ;

                           public boolean isBatchCountSpecified(){
                               return localBatchCountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBatchCount(){
                               return localBatchCount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BatchCount
                               */
                               public void setBatchCount(java.lang.String param){
                            localBatchCountTracker = true;
                                   
                                            this.localBatchCount=param;
                                       

                               }
                            

                        /**
                        * field for BatchNumber
                        */

                        
                                    protected java.lang.String localBatchNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBatchNumberTracker = false ;

                           public boolean isBatchNumberSpecified(){
                               return localBatchNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBatchNumber(){
                               return localBatchNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BatchNumber
                               */
                               public void setBatchNumber(java.lang.String param){
                            localBatchNumberTracker = true;
                                   
                                            this.localBatchNumber=param;
                                       

                               }
                            

                        /**
                        * field for BillThirdPartyAreaCode
                        */

                        
                                    protected java.lang.String localBillThirdPartyAreaCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBillThirdPartyAreaCodeTracker = false ;

                           public boolean isBillThirdPartyAreaCodeSpecified(){
                               return localBillThirdPartyAreaCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBillThirdPartyAreaCode(){
                               return localBillThirdPartyAreaCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BillThirdPartyAreaCode
                               */
                               public void setBillThirdPartyAreaCode(java.lang.String param){
                            localBillThirdPartyAreaCodeTracker = true;
                                   
                                            this.localBillThirdPartyAreaCode=param;
                                       

                               }
                            

                        /**
                        * field for BillThirdPartyCustomerCode
                        */

                        
                                    protected java.lang.String localBillThirdPartyCustomerCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBillThirdPartyCustomerCodeTracker = false ;

                           public boolean isBillThirdPartyCustomerCodeSpecified(){
                               return localBillThirdPartyCustomerCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBillThirdPartyCustomerCode(){
                               return localBillThirdPartyCustomerCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BillThirdPartyCustomerCode
                               */
                               public void setBillThirdPartyCustomerCode(java.lang.String param){
                            localBillThirdPartyCustomerCodeTracker = true;
                                   
                                            this.localBillThirdPartyCustomerCode=param;
                                       

                               }
                            

                        /**
                        * field for BulkEntry
                        */

                        
                                    protected java.lang.String localBulkEntry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBulkEntryTracker = false ;

                           public boolean isBulkEntrySpecified(){
                               return localBulkEntryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBulkEntry(){
                               return localBulkEntry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BulkEntry
                               */
                               public void setBulkEntry(java.lang.String param){
                            localBulkEntryTracker = true;
                                   
                                            this.localBulkEntry=param;
                                       

                               }
                            

                        /**
                        * field for CafCharges
                        */

                        
                                    protected double localCafCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCafChargesTracker = false ;

                           public boolean isCafChargesSpecified(){
                               return localCafChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getCafCharges(){
                               return localCafCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CafCharges
                               */
                               public void setCafCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localCafChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localCafCharges=param;
                                       

                               }
                            

                        /**
                        * field for CardCode
                        */

                        
                                    protected java.lang.String localCardCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardCodeTracker = false ;

                           public boolean isCardCodeSpecified(){
                               return localCardCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardCode(){
                               return localCardCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardCode
                               */
                               public void setCardCode(java.lang.String param){
                            localCardCodeTracker = true;
                                   
                                            this.localCardCode=param;
                                       

                               }
                            

                        /**
                        * field for CardExpiryDate
                        */

                        
                                    protected java.util.Calendar localCardExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardExpiryDateTracker = false ;

                           public boolean isCardExpiryDateSpecified(){
                               return localCardExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getCardExpiryDate(){
                               return localCardExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardExpiryDate
                               */
                               public void setCardExpiryDate(java.util.Calendar param){
                            localCardExpiryDateTracker = true;
                                   
                                            this.localCardExpiryDate=param;
                                       

                               }
                            

                        /**
                        * field for CardHolderName
                        */

                        
                                    protected java.lang.String localCardHolderName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardHolderNameTracker = false ;

                           public boolean isCardHolderNameSpecified(){
                               return localCardHolderNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardHolderName(){
                               return localCardHolderName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardHolderName
                               */
                               public void setCardHolderName(java.lang.String param){
                            localCardHolderNameTracker = true;
                                   
                                            this.localCardHolderName=param;
                                       

                               }
                            

                        /**
                        * field for Cartage
                        */

                        
                                    protected double localCartage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCartageTracker = false ;

                           public boolean isCartageSpecified(){
                               return localCartageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getCartage(){
                               return localCartage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cartage
                               */
                               public void setCartage(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localCartageTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localCartage=param;
                                       

                               }
                            

                        /**
                        * field for CartageAgentCarrier
                        */

                        
                                    protected java.lang.String localCartageAgentCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCartageAgentCarrierTracker = false ;

                           public boolean isCartageAgentCarrierSpecified(){
                               return localCartageAgentCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCartageAgentCarrier(){
                               return localCartageAgentCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CartageAgentCarrier
                               */
                               public void setCartageAgentCarrier(java.lang.String param){
                            localCartageAgentCarrierTracker = true;
                                   
                                            this.localCartageAgentCarrier=param;
                                       

                               }
                            

                        /**
                        * field for CashMemoNo
                        */

                        
                                    protected int localCashMemoNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCashMemoNoTracker = false ;

                           public boolean isCashMemoNoSpecified(){
                               return localCashMemoNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getCashMemoNo(){
                               return localCashMemoNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CashMemoNo
                               */
                               public void setCashMemoNo(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localCashMemoNoTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localCashMemoNo=param;
                                       

                               }
                            

                        /**
                        * field for CftRate
                        */

                        
                                    protected double localCftRate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCftRateTracker = false ;

                           public boolean isCftRateSpecified(){
                               return localCftRateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getCftRate(){
                               return localCftRate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CftRate
                               */
                               public void setCftRate(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localCftRateTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localCftRate=param;
                                       

                               }
                            

                        /**
                        * field for ChargeWeight
                        */

                        
                                    protected double localChargeWeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChargeWeightTracker = false ;

                           public boolean isChargeWeightSpecified(){
                               return localChargeWeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getChargeWeight(){
                               return localChargeWeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChargeWeight
                               */
                               public void setChargeWeight(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localChargeWeightTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localChargeWeight=param;
                                       

                               }
                            

                        /**
                        * field for ColctCharges
                        */

                        
                                    protected double localColctCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localColctChargesTracker = false ;

                           public boolean isColctChargesSpecified(){
                               return localColctChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getColctCharges(){
                               return localColctCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ColctCharges
                               */
                               public void setColctCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localColctChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localColctCharges=param;
                                       

                               }
                            

                        /**
                        * field for CommValue
                        */

                        
                                    protected double localCommValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommValueTracker = false ;

                           public boolean isCommValueSpecified(){
                               return localCommValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getCommValue(){
                               return localCommValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommValue
                               */
                               public void setCommValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localCommValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localCommValue=param;
                                       

                               }
                            

                        /**
                        * field for CommodityCode
                        */

                        
                                    protected java.lang.String localCommodityCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommodityCodeTracker = false ;

                           public boolean isCommodityCodeSpecified(){
                               return localCommodityCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCommodityCode(){
                               return localCommodityCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommodityCode
                               */
                               public void setCommodityCode(java.lang.String param){
                            localCommodityCodeTracker = true;
                                   
                                            this.localCommodityCode=param;
                                       

                               }
                            

                        /**
                        * field for CommodityDescription1
                        */

                        
                                    protected java.lang.String localCommodityDescription1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommodityDescription1Tracker = false ;

                           public boolean isCommodityDescription1Specified(){
                               return localCommodityDescription1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCommodityDescription1(){
                               return localCommodityDescription1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommodityDescription1
                               */
                               public void setCommodityDescription1(java.lang.String param){
                            localCommodityDescription1Tracker = true;
                                   
                                            this.localCommodityDescription1=param;
                                       

                               }
                            

                        /**
                        * field for CommodityDescription2
                        */

                        
                                    protected java.lang.String localCommodityDescription2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommodityDescription2Tracker = false ;

                           public boolean isCommodityDescription2Specified(){
                               return localCommodityDescription2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCommodityDescription2(){
                               return localCommodityDescription2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommodityDescription2
                               */
                               public void setCommodityDescription2(java.lang.String param){
                            localCommodityDescription2Tracker = true;
                                   
                                            this.localCommodityDescription2=param;
                                       

                               }
                            

                        /**
                        * field for CommodityDescription3
                        */

                        
                                    protected java.lang.String localCommodityDescription3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommodityDescription3Tracker = false ;

                           public boolean isCommodityDescription3Specified(){
                               return localCommodityDescription3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCommodityDescription3(){
                               return localCommodityDescription3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommodityDescription3
                               */
                               public void setCommodityDescription3(java.lang.String param){
                            localCommodityDescription3Tracker = true;
                                   
                                            this.localCommodityDescription3=param;
                                       

                               }
                            

                        /**
                        * field for CommodityName
                        */

                        
                                    protected java.lang.String localCommodityName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommodityNameTracker = false ;

                           public boolean isCommodityNameSpecified(){
                               return localCommodityNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCommodityName(){
                               return localCommodityName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CommodityName
                               */
                               public void setCommodityName(java.lang.String param){
                            localCommodityNameTracker = true;
                                   
                                            this.localCommodityName=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAddr1
                        */

                        
                                    protected java.lang.String localConsigneeAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAddr1Tracker = false ;

                           public boolean isConsigneeAddr1Specified(){
                               return localConsigneeAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAddr1(){
                               return localConsigneeAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAddr1
                               */
                               public void setConsigneeAddr1(java.lang.String param){
                            localConsigneeAddr1Tracker = true;
                                   
                                            this.localConsigneeAddr1=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAddr2
                        */

                        
                                    protected java.lang.String localConsigneeAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAddr2Tracker = false ;

                           public boolean isConsigneeAddr2Specified(){
                               return localConsigneeAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAddr2(){
                               return localConsigneeAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAddr2
                               */
                               public void setConsigneeAddr2(java.lang.String param){
                            localConsigneeAddr2Tracker = true;
                                   
                                            this.localConsigneeAddr2=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAddr3City
                        */

                        
                                    protected java.lang.String localConsigneeAddr3City ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAddr3CityTracker = false ;

                           public boolean isConsigneeAddr3CitySpecified(){
                               return localConsigneeAddr3CityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAddr3City(){
                               return localConsigneeAddr3City;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAddr3City
                               */
                               public void setConsigneeAddr3City(java.lang.String param){
                            localConsigneeAddr3CityTracker = true;
                                   
                                            this.localConsigneeAddr3City=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateAddr1
                        */

                        
                                    protected java.lang.String localConsigneeAlternateAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateAddr1Tracker = false ;

                           public boolean isConsigneeAlternateAddr1Specified(){
                               return localConsigneeAlternateAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateAddr1(){
                               return localConsigneeAlternateAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateAddr1
                               */
                               public void setConsigneeAlternateAddr1(java.lang.String param){
                            localConsigneeAlternateAddr1Tracker = true;
                                   
                                            this.localConsigneeAlternateAddr1=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateAddr2
                        */

                        
                                    protected java.lang.String localConsigneeAlternateAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateAddr2Tracker = false ;

                           public boolean isConsigneeAlternateAddr2Specified(){
                               return localConsigneeAlternateAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateAddr2(){
                               return localConsigneeAlternateAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateAddr2
                               */
                               public void setConsigneeAlternateAddr2(java.lang.String param){
                            localConsigneeAlternateAddr2Tracker = true;
                                   
                                            this.localConsigneeAlternateAddr2=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateAddr3
                        */

                        
                                    protected java.lang.String localConsigneeAlternateAddr3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateAddr3Tracker = false ;

                           public boolean isConsigneeAlternateAddr3Specified(){
                               return localConsigneeAlternateAddr3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateAddr3(){
                               return localConsigneeAlternateAddr3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateAddr3
                               */
                               public void setConsigneeAlternateAddr3(java.lang.String param){
                            localConsigneeAlternateAddr3Tracker = true;
                                   
                                            this.localConsigneeAlternateAddr3=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateAttn
                        */

                        
                                    protected java.lang.String localConsigneeAlternateAttn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateAttnTracker = false ;

                           public boolean isConsigneeAlternateAttnSpecified(){
                               return localConsigneeAlternateAttnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateAttn(){
                               return localConsigneeAlternateAttn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateAttn
                               */
                               public void setConsigneeAlternateAttn(java.lang.String param){
                            localConsigneeAlternateAttnTracker = true;
                                   
                                            this.localConsigneeAlternateAttn=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateCity
                        */

                        
                                    protected java.lang.String localConsigneeAlternateCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateCityTracker = false ;

                           public boolean isConsigneeAlternateCitySpecified(){
                               return localConsigneeAlternateCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateCity(){
                               return localConsigneeAlternateCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateCity
                               */
                               public void setConsigneeAlternateCity(java.lang.String param){
                            localConsigneeAlternateCityTracker = true;
                                   
                                            this.localConsigneeAlternateCity=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternateName
                        */

                        
                                    protected java.lang.String localConsigneeAlternateName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternateNameTracker = false ;

                           public boolean isConsigneeAlternateNameSpecified(){
                               return localConsigneeAlternateNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternateName(){
                               return localConsigneeAlternateName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternateName
                               */
                               public void setConsigneeAlternateName(java.lang.String param){
                            localConsigneeAlternateNameTracker = true;
                                   
                                            this.localConsigneeAlternateName=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternatePhoneNo
                        */

                        
                                    protected java.lang.String localConsigneeAlternatePhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternatePhoneNoTracker = false ;

                           public boolean isConsigneeAlternatePhoneNoSpecified(){
                               return localConsigneeAlternatePhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternatePhoneNo(){
                               return localConsigneeAlternatePhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternatePhoneNo
                               */
                               public void setConsigneeAlternatePhoneNo(java.lang.String param){
                            localConsigneeAlternatePhoneNoTracker = true;
                                   
                                            this.localConsigneeAlternatePhoneNo=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeAlternatePincode
                        */

                        
                                    protected java.lang.String localConsigneeAlternatePincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeAlternatePincodeTracker = false ;

                           public boolean isConsigneeAlternatePincodeSpecified(){
                               return localConsigneeAlternatePincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeAlternatePincode(){
                               return localConsigneeAlternatePincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeAlternatePincode
                               */
                               public void setConsigneeAlternatePincode(java.lang.String param){
                            localConsigneeAlternatePincodeTracker = true;
                                   
                                            this.localConsigneeAlternatePincode=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeCode
                        */

                        
                                    protected java.lang.String localConsigneeCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeCodeTracker = false ;

                           public boolean isConsigneeCodeSpecified(){
                               return localConsigneeCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeCode(){
                               return localConsigneeCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeCode
                               */
                               public void setConsigneeCode(java.lang.String param){
                            localConsigneeCodeTracker = true;
                                   
                                            this.localConsigneeCode=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeMobileNo
                        */

                        
                                    protected java.lang.String localConsigneeMobileNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeMobileNoTracker = false ;

                           public boolean isConsigneeMobileNoSpecified(){
                               return localConsigneeMobileNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeMobileNo(){
                               return localConsigneeMobileNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeMobileNo
                               */
                               public void setConsigneeMobileNo(java.lang.String param){
                            localConsigneeMobileNoTracker = true;
                                   
                                            this.localConsigneeMobileNo=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeName
                        */

                        
                                    protected java.lang.String localConsigneeName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeNameTracker = false ;

                           public boolean isConsigneeNameSpecified(){
                               return localConsigneeNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeName(){
                               return localConsigneeName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeName
                               */
                               public void setConsigneeName(java.lang.String param){
                            localConsigneeNameTracker = true;
                                   
                                            this.localConsigneeName=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneePhoneNo
                        */

                        
                                    protected java.lang.String localConsigneePhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneePhoneNoTracker = false ;

                           public boolean isConsigneePhoneNoSpecified(){
                               return localConsigneePhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneePhoneNo(){
                               return localConsigneePhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneePhoneNo
                               */
                               public void setConsigneePhoneNo(java.lang.String param){
                            localConsigneePhoneNoTracker = true;
                                   
                                            this.localConsigneePhoneNo=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneePincode
                        */

                        
                                    protected java.lang.String localConsigneePincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneePincodeTracker = false ;

                           public boolean isConsigneePincodeSpecified(){
                               return localConsigneePincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneePincode(){
                               return localConsigneePincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneePincode
                               */
                               public void setConsigneePincode(java.lang.String param){
                            localConsigneePincodeTracker = true;
                                   
                                            this.localConsigneePincode=param;
                                       

                               }
                            

                        /**
                        * field for ConsigneeSenderAtn
                        */

                        
                                    protected java.lang.String localConsigneeSenderAtn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsigneeSenderAtnTracker = false ;

                           public boolean isConsigneeSenderAtnSpecified(){
                               return localConsigneeSenderAtnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsigneeSenderAtn(){
                               return localConsigneeSenderAtn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ConsigneeSenderAtn
                               */
                               public void setConsigneeSenderAtn(java.lang.String param){
                            localConsigneeSenderAtnTracker = true;
                                   
                                            this.localConsigneeSenderAtn=param;
                                       

                               }
                            

                        /**
                        * field for CountryName
                        */

                        
                                    protected java.lang.String localCountryName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryNameTracker = false ;

                           public boolean isCountryNameSpecified(){
                               return localCountryNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountryName(){
                               return localCountryName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CountryName
                               */
                               public void setCountryName(java.lang.String param){
                            localCountryNameTracker = true;
                                   
                                            this.localCountryName=param;
                                       

                               }
                            

                        /**
                        * field for Credit
                        */

                        
                                    protected java.lang.String localCredit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCreditTracker = false ;

                           public boolean isCreditSpecified(){
                               return localCreditTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCredit(){
                               return localCredit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Credit
                               */
                               public void setCredit(java.lang.String param){
                            localCreditTracker = true;
                                   
                                            this.localCredit=param;
                                       

                               }
                            

                        /**
                        * field for CreditCardNo
                        */

                        
                                    protected java.lang.String localCreditCardNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCreditCardNoTracker = false ;

                           public boolean isCreditCardNoSpecified(){
                               return localCreditCardNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCreditCardNo(){
                               return localCreditCardNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CreditCardNo
                               */
                               public void setCreditCardNo(java.lang.String param){
                            localCreditCardNoTracker = true;
                                   
                                            this.localCreditCardNo=param;
                                       

                               }
                            

                        /**
                        * field for CurrencyCode
                        */

                        
                                    protected java.lang.String localCurrencyCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrencyCodeTracker = false ;

                           public boolean isCurrencyCodeSpecified(){
                               return localCurrencyCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrencyCode(){
                               return localCurrencyCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrencyCode
                               */
                               public void setCurrencyCode(java.lang.String param){
                            localCurrencyCodeTracker = true;
                                   
                                            this.localCurrencyCode=param;
                                       

                               }
                            

                        /**
                        * field for CustomerCode
                        */

                        
                                    protected java.lang.String localCustomerCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerCodeTracker = false ;

                           public boolean isCustomerCodeSpecified(){
                               return localCustomerCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerCode(){
                               return localCustomerCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerCode
                               */
                               public void setCustomerCode(java.lang.String param){
                            localCustomerCodeTracker = true;
                                   
                                            this.localCustomerCode=param;
                                       

                               }
                            

                        /**
                        * field for DCCharges
                        */

                        
                                    protected double localDCCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDCChargesTracker = false ;

                           public boolean isDCChargesSpecified(){
                               return localDCChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDCCharges(){
                               return localDCCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DCCharges
                               */
                               public void setDCCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDCChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDCCharges=param;
                                       

                               }
                            

                        /**
                        * field for DPValue
                        */

                        
                                    protected double localDPValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDPValueTracker = false ;

                           public boolean isDPValueSpecified(){
                               return localDPValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDPValue(){
                               return localDPValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DPValue
                               */
                               public void setDPValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDPValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDPValue=param;
                                       

                               }
                            

                        /**
                        * field for DataLoggerType
                        */

                        
                                    protected java.lang.String localDataLoggerType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDataLoggerTypeTracker = false ;

                           public boolean isDataLoggerTypeSpecified(){
                               return localDataLoggerTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDataLoggerType(){
                               return localDataLoggerType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DataLoggerType
                               */
                               public void setDataLoggerType(java.lang.String param){
                            localDataLoggerTypeTracker = true;
                                   
                                            this.localDataLoggerType=param;
                                       

                               }
                            

                        /**
                        * field for DdpShipment
                        */

                        
                                    protected java.lang.String localDdpShipment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDdpShipmentTracker = false ;

                           public boolean isDdpShipmentSpecified(){
                               return localDdpShipmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDdpShipment(){
                               return localDdpShipment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DdpShipment
                               */
                               public void setDdpShipment(java.lang.String param){
                            localDdpShipmentTracker = true;
                                   
                                            this.localDdpShipment=param;
                                       

                               }
                            

                        /**
                        * field for DeclaredValue
                        */

                        
                                    protected double localDeclaredValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDeclaredValueTracker = false ;

                           public boolean isDeclaredValueSpecified(){
                               return localDeclaredValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDeclaredValue(){
                               return localDeclaredValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DeclaredValue
                               */
                               public void setDeclaredValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDeclaredValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDeclaredValue=param;
                                       

                               }
                            

                        /**
                        * field for DeliveryDate
                        */

                        
                                    protected java.util.Calendar localDeliveryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDeliveryDateTracker = false ;

                           public boolean isDeliveryDateSpecified(){
                               return localDeliveryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getDeliveryDate(){
                               return localDeliveryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DeliveryDate
                               */
                               public void setDeliveryDate(java.util.Calendar param){
                            localDeliveryDateTracker = true;
                                   
                                            this.localDeliveryDate=param;
                                       

                               }
                            

                        /**
                        * field for DestinationArea
                        */

                        
                                    protected java.lang.String localDestinationArea ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDestinationAreaTracker = false ;

                           public boolean isDestinationAreaSpecified(){
                               return localDestinationAreaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDestinationArea(){
                               return localDestinationArea;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DestinationArea
                               */
                               public void setDestinationArea(java.lang.String param){
                            localDestinationAreaTracker = true;
                                   
                                            this.localDestinationArea=param;
                                       

                               }
                            

                        /**
                        * field for DestinationServiceCentre
                        */

                        
                                    protected java.lang.String localDestinationServiceCentre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDestinationServiceCentreTracker = false ;

                           public boolean isDestinationServiceCentreSpecified(){
                               return localDestinationServiceCentreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDestinationServiceCentre(){
                               return localDestinationServiceCentre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DestinationServiceCentre
                               */
                               public void setDestinationServiceCentre(java.lang.String param){
                            localDestinationServiceCentreTracker = true;
                                   
                                            this.localDestinationServiceCentre=param;
                                       

                               }
                            

                        /**
                        * field for DetentionCharges
                        */

                        
                                    protected double localDetentionCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDetentionChargesTracker = false ;

                           public boolean isDetentionChargesSpecified(){
                               return localDetentionChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDetentionCharges(){
                               return localDetentionCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DetentionCharges
                               */
                               public void setDetentionCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDetentionChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDetentionCharges=param;
                                       

                               }
                            

                        /**
                        * field for DhlAccountNumber
                        */

                        
                                    protected java.lang.String localDhlAccountNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDhlAccountNumberTracker = false ;

                           public boolean isDhlAccountNumberSpecified(){
                               return localDhlAccountNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDhlAccountNumber(){
                               return localDhlAccountNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DhlAccountNumber
                               */
                               public void setDhlAccountNumber(java.lang.String param){
                            localDhlAccountNumberTracker = true;
                                   
                                            this.localDhlAccountNumber=param;
                                       

                               }
                            

                        /**
                        * field for DimBreadth
                        */

                        
                                    protected com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble localDimBreadth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDimBreadthTracker = false ;

                           public boolean isDimBreadthSpecified(){
                               return localDimBreadthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble
                           */
                           public  com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble getDimBreadth(){
                               return localDimBreadth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DimBreadth
                               */
                               public void setDimBreadth(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble param){
                            localDimBreadthTracker = true;
                                   
                                            this.localDimBreadth=param;
                                       

                               }
                            

                        /**
                        * field for DimHeight
                        */

                        
                                    protected com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble localDimHeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDimHeightTracker = false ;

                           public boolean isDimHeightSpecified(){
                               return localDimHeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble
                           */
                           public  com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble getDimHeight(){
                               return localDimHeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DimHeight
                               */
                               public void setDimHeight(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble param){
                            localDimHeightTracker = true;
                                   
                                            this.localDimHeight=param;
                                       

                               }
                            

                        /**
                        * field for DimLength
                        */

                        
                                    protected com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble localDimLength ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDimLengthTracker = false ;

                           public boolean isDimLengthSpecified(){
                               return localDimLengthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble
                           */
                           public  com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble getDimLength(){
                               return localDimLength;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DimLength
                               */
                               public void setDimLength(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble param){
                            localDimLengthTracker = true;
                                   
                                            this.localDimLength=param;
                                       

                               }
                            

                        /**
                        * field for DimPieces
                        */

                        
                                    protected com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfint localDimPieces ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDimPiecesTracker = false ;

                           public boolean isDimPiecesSpecified(){
                               return localDimPiecesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfint
                           */
                           public  com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfint getDimPieces(){
                               return localDimPieces;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DimPieces
                               */
                               public void setDimPieces(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfint param){
                            localDimPiecesTracker = true;
                                   
                                            this.localDimPieces=param;
                                       

                               }
                            

                        /**
                        * field for DimWeight
                        */

                        
                                    protected double localDimWeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDimWeightTracker = false ;

                           public boolean isDimWeightSpecified(){
                               return localDimWeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDimWeight(){
                               return localDimWeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DimWeight
                               */
                               public void setDimWeight(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDimWeightTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDimWeight=param;
                                       

                               }
                            

                        /**
                        * field for DocCharges
                        */

                        
                                    protected double localDocCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocChargesTracker = false ;

                           public boolean isDocChargesSpecified(){
                               return localDocChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDocCharges(){
                               return localDocCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocCharges
                               */
                               public void setDocCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDocChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDocCharges=param;
                                       

                               }
                            

                        /**
                        * field for DodAmount
                        */

                        
                                    protected double localDodAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDodAmountTracker = false ;

                           public boolean isDodAmountSpecified(){
                               return localDodAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDodAmount(){
                               return localDodAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DodAmount
                               */
                               public void setDodAmount(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDodAmountTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDodAmount=param;
                                       

                               }
                            

                        /**
                        * field for DryIceWeight
                        */

                        
                                    protected double localDryIceWeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDryIceWeightTracker = false ;

                           public boolean isDryIceWeightSpecified(){
                               return localDryIceWeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDryIceWeight(){
                               return localDryIceWeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DryIceWeight
                               */
                               public void setDryIceWeight(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDryIceWeightTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDryIceWeight=param;
                                       

                               }
                            

                        /**
                        * field for DueAgent
                        */

                        
                                    protected double localDueAgent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDueAgentTracker = false ;

                           public boolean isDueAgentSpecified(){
                               return localDueAgentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDueAgent(){
                               return localDueAgent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DueAgent
                               */
                               public void setDueAgent(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDueAgentTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDueAgent=param;
                                       

                               }
                            

                        /**
                        * field for DueCarrier
                        */

                        
                                    protected double localDueCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDueCarrierTracker = false ;

                           public boolean isDueCarrierSpecified(){
                               return localDueCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDueCarrier(){
                               return localDueCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DueCarrier
                               */
                               public void setDueCarrier(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDueCarrierTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDueCarrier=param;
                                       

                               }
                            

                        /**
                        * field for DutyPaidAmount
                        */

                        
                                    protected double localDutyPaidAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDutyPaidAmountTracker = false ;

                           public boolean isDutyPaidAmountSpecified(){
                               return localDutyPaidAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getDutyPaidAmount(){
                               return localDutyPaidAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DutyPaidAmount
                               */
                               public void setDutyPaidAmount(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localDutyPaidAmountTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localDutyPaidAmount=param;
                                       

                               }
                            

                        /**
                        * field for EccCharges
                        */

                        
                                    protected double localEccCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEccChargesTracker = false ;

                           public boolean isEccChargesSpecified(){
                               return localEccChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getEccCharges(){
                               return localEccCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EccCharges
                               */
                               public void setEccCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localEccChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localEccCharges=param;
                                       

                               }
                            

                        /**
                        * field for EmailId
                        */

                        
                                    protected java.lang.String localEmailId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailIdTracker = false ;

                           public boolean isEmailIdSpecified(){
                               return localEmailIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmailId(){
                               return localEmailId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmailId
                               */
                               public void setEmailId(java.lang.String param){
                            localEmailIdTracker = true;
                                   
                                            this.localEmailId=param;
                                       

                               }
                            

                        /**
                        * field for EmployeeCode
                        */

                        
                                    protected java.lang.String localEmployeeCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployeeCodeTracker = false ;

                           public boolean isEmployeeCodeSpecified(){
                               return localEmployeeCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployeeCode(){
                               return localEmployeeCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployeeCode
                               */
                               public void setEmployeeCode(java.lang.String param){
                            localEmployeeCodeTracker = true;
                                   
                                            this.localEmployeeCode=param;
                                       

                               }
                            

                        /**
                        * field for EsaCftRate
                        */

                        
                                    protected double localEsaCftRate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEsaCftRateTracker = false ;

                           public boolean isEsaCftRateSpecified(){
                               return localEsaCftRateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getEsaCftRate(){
                               return localEsaCftRate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EsaCftRate
                               */
                               public void setEsaCftRate(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localEsaCftRateTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localEsaCftRate=param;
                                       

                               }
                            

                        /**
                        * field for EsaChargesGrandTotal
                        */

                        
                                    protected double localEsaChargesGrandTotal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEsaChargesGrandTotalTracker = false ;

                           public boolean isEsaChargesGrandTotalSpecified(){
                               return localEsaChargesGrandTotalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getEsaChargesGrandTotal(){
                               return localEsaChargesGrandTotal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EsaChargesGrandTotal
                               */
                               public void setEsaChargesGrandTotal(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localEsaChargesGrandTotalTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localEsaChargesGrandTotal=param;
                                       

                               }
                            

                        /**
                        * field for EsaChargesServiceTaxPlusCess
                        */

                        
                                    protected double localEsaChargesServiceTaxPlusCess ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEsaChargesServiceTaxPlusCessTracker = false ;

                           public boolean isEsaChargesServiceTaxPlusCessSpecified(){
                               return localEsaChargesServiceTaxPlusCessTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getEsaChargesServiceTaxPlusCess(){
                               return localEsaChargesServiceTaxPlusCess;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EsaChargesServiceTaxPlusCess
                               */
                               public void setEsaChargesServiceTaxPlusCess(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localEsaChargesServiceTaxPlusCessTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localEsaChargesServiceTaxPlusCess=param;
                                       

                               }
                            

                        /**
                        * field for EsaChargesTotal
                        */

                        
                                    protected double localEsaChargesTotal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEsaChargesTotalTracker = false ;

                           public boolean isEsaChargesTotalSpecified(){
                               return localEsaChargesTotalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getEsaChargesTotal(){
                               return localEsaChargesTotal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EsaChargesTotal
                               */
                               public void setEsaChargesTotal(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localEsaChargesTotalTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localEsaChargesTotal=param;
                                       

                               }
                            

                        /**
                        * field for EsaCode
                        */

                        
                                    protected java.lang.String localEsaCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEsaCodeTracker = false ;

                           public boolean isEsaCodeSpecified(){
                               return localEsaCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEsaCode(){
                               return localEsaCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EsaCode
                               */
                               public void setEsaCode(java.lang.String param){
                            localEsaCodeTracker = true;
                                   
                                            this.localEsaCode=param;
                                       

                               }
                            

                        /**
                        * field for ExchangeRate
                        */

                        
                                    protected double localExchangeRate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExchangeRateTracker = false ;

                           public boolean isExchangeRateSpecified(){
                               return localExchangeRateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getExchangeRate(){
                               return localExchangeRate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExchangeRate
                               */
                               public void setExchangeRate(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localExchangeRateTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localExchangeRate=param;
                                       

                               }
                            

                        /**
                        * field for ExchangeUnits
                        */

                        
                                    protected int localExchangeUnits ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExchangeUnitsTracker = false ;

                           public boolean isExchangeUnitsSpecified(){
                               return localExchangeUnitsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getExchangeUnits(){
                               return localExchangeUnits;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExchangeUnits
                               */
                               public void setExchangeUnits(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localExchangeUnitsTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localExchangeUnits=param;
                                       

                               }
                            

                        /**
                        * field for FSAmount
                        */

                        
                                    protected double localFSAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFSAmountTracker = false ;

                           public boolean isFSAmountSpecified(){
                               return localFSAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getFSAmount(){
                               return localFSAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FSAmount
                               */
                               public void setFSAmount(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localFSAmountTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localFSAmount=param;
                                       

                               }
                            

                        /**
                        * field for FavouringName
                        */

                        
                                    protected java.lang.String localFavouringName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFavouringNameTracker = false ;

                           public boolean isFavouringNameSpecified(){
                               return localFavouringNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFavouringName(){
                               return localFavouringName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FavouringName
                               */
                               public void setFavouringName(java.lang.String param){
                            localFavouringNameTracker = true;
                                   
                                            this.localFavouringName=param;
                                       

                               }
                            

                        /**
                        * field for Flfm
                        */

                        
                                    protected java.lang.String localFlfm ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlfmTracker = false ;

                           public boolean isFlfmSpecified(){
                               return localFlfmTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlfm(){
                               return localFlfm;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Flfm
                               */
                               public void setFlfm(java.lang.String param){
                            localFlfmTracker = true;
                                   
                                            this.localFlfm=param;
                                       

                               }
                            

                        /**
                        * field for FocCode
                        */

                        
                                    protected java.lang.String localFocCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFocCodeTracker = false ;

                           public boolean isFocCodeSpecified(){
                               return localFocCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFocCode(){
                               return localFocCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FocCode
                               */
                               public void setFocCode(java.lang.String param){
                            localFocCodeTracker = true;
                                   
                                            this.localFocCode=param;
                                       

                               }
                            

                        /**
                        * field for FocDescription
                        */

                        
                                    protected java.lang.String localFocDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFocDescriptionTracker = false ;

                           public boolean isFocDescriptionSpecified(){
                               return localFocDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFocDescription(){
                               return localFocDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FocDescription
                               */
                               public void setFocDescription(java.lang.String param){
                            localFocDescriptionTracker = true;
                                   
                                            this.localFocDescription=param;
                                       

                               }
                            

                        /**
                        * field for FodCharges
                        */

                        
                                    protected double localFodCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFodChargesTracker = false ;

                           public boolean isFodChargesSpecified(){
                               return localFodChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getFodCharges(){
                               return localFodCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FodCharges
                               */
                               public void setFodCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localFodChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localFodCharges=param;
                                       

                               }
                            

                        /**
                        * field for FodCodFlag
                        */

                        
                                    protected java.lang.String localFodCodFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFodCodFlagTracker = false ;

                           public boolean isFodCodFlagSpecified(){
                               return localFodCodFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFodCodFlag(){
                               return localFodCodFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FodCodFlag
                               */
                               public void setFodCodFlag(java.lang.String param){
                            localFodCodFlagTracker = true;
                                   
                                            this.localFodCodFlag=param;
                                       

                               }
                            

                        /**
                        * field for FovType
                        */

                        
                                    protected java.lang.String localFovType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFovTypeTracker = false ;

                           public boolean isFovTypeSpecified(){
                               return localFovTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFovType(){
                               return localFovType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FovType
                               */
                               public void setFovType(java.lang.String param){
                            localFovTypeTracker = true;
                                   
                                            this.localFovType=param;
                                       

                               }
                            

                        /**
                        * field for Frieght
                        */

                        
                                    protected double localFrieght ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFrieghtTracker = false ;

                           public boolean isFrieghtSpecified(){
                               return localFrieghtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getFrieght(){
                               return localFrieght;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Frieght
                               */
                               public void setFrieght(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localFrieghtTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localFrieght=param;
                                       

                               }
                            

                        /**
                        * field for HCCharge
                        */

                        
                                    protected double localHCCharge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHCChargeTracker = false ;

                           public boolean isHCChargeSpecified(){
                               return localHCChargeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getHCCharge(){
                               return localHCCharge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HCCharge
                               */
                               public void setHCCharge(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localHCChargeTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localHCCharge=param;
                                       

                               }
                            

                        /**
                        * field for IATACode
                        */

                        
                                    protected java.lang.String localIATACode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIATACodeTracker = false ;

                           public boolean isIATACodeSpecified(){
                               return localIATACodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIATACode(){
                               return localIATACode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IATACode
                               */
                               public void setIATACode(java.lang.String param){
                            localIATACodeTracker = true;
                                   
                                            this.localIATACode=param;
                                       

                               }
                            

                        /**
                        * field for ISDGSHIPMENT
                        */

                        
                                    protected java.lang.String localISDGSHIPMENT ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localISDGSHIPMENTTracker = false ;

                           public boolean isISDGSHIPMENTSpecified(){
                               return localISDGSHIPMENTTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getISDGSHIPMENT(){
                               return localISDGSHIPMENT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ISDGSHIPMENT
                               */
                               public void setISDGSHIPMENT(java.lang.String param){
                            localISDGSHIPMENTTracker = true;
                                   
                                            this.localISDGSHIPMENT=param;
                                       

                               }
                            

                        /**
                        * field for ImportType
                        */

                        
                                    protected java.lang.String localImportType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImportTypeTracker = false ;

                           public boolean isImportTypeSpecified(){
                               return localImportTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImportType(){
                               return localImportType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImportType
                               */
                               public void setImportType(java.lang.String param){
                            localImportTypeTracker = true;
                                   
                                            this.localImportType=param;
                                       

                               }
                            

                        /**
                        * field for IncotermCode
                        */

                        
                                    protected java.lang.String localIncotermCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncotermCodeTracker = false ;

                           public boolean isIncotermCodeSpecified(){
                               return localIncotermCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIncotermCode(){
                               return localIncotermCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IncotermCode
                               */
                               public void setIncotermCode(java.lang.String param){
                            localIncotermCodeTracker = true;
                                   
                                            this.localIncotermCode=param;
                                       

                               }
                            

                        /**
                        * field for IncotermDescription
                        */

                        
                                    protected java.lang.String localIncotermDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncotermDescriptionTracker = false ;

                           public boolean isIncotermDescriptionSpecified(){
                               return localIncotermDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIncotermDescription(){
                               return localIncotermDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IncotermDescription
                               */
                               public void setIncotermDescription(java.lang.String param){
                            localIncotermDescriptionTracker = true;
                                   
                                            this.localIncotermDescription=param;
                                       

                               }
                            

                        /**
                        * field for InrValue
                        */

                        
                                    protected double localInrValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInrValueTracker = false ;

                           public boolean isInrValueSpecified(){
                               return localInrValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getInrValue(){
                               return localInrValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InrValue
                               */
                               public void setInrValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localInrValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localInrValue=param;
                                       

                               }
                            

                        /**
                        * field for InvoiceNumber
                        */

                        
                                    protected java.lang.String localInvoiceNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInvoiceNumberTracker = false ;

                           public boolean isInvoiceNumberSpecified(){
                               return localInvoiceNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInvoiceNumber(){
                               return localInvoiceNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InvoiceNumber
                               */
                               public void setInvoiceNumber(java.lang.String param){
                            localInvoiceNumberTracker = true;
                                   
                                            this.localInvoiceNumber=param;
                                       

                               }
                            

                        /**
                        * field for IsBondedATA
                        */

                        
                                    protected boolean localIsBondedATA ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsBondedATATracker = false ;

                           public boolean isIsBondedATASpecified(){
                               return localIsBondedATATracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsBondedATA(){
                               return localIsBondedATA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsBondedATA
                               */
                               public void setIsBondedATA(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsBondedATATracker =
                                       true;
                                   
                                            this.localIsBondedATA=param;
                                       

                               }
                            

                        /**
                        * field for IsCashCreditShipment
                        */

                        
                                    protected boolean localIsCashCreditShipment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsCashCreditShipmentTracker = false ;

                           public boolean isIsCashCreditShipmentSpecified(){
                               return localIsCashCreditShipmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsCashCreditShipment(){
                               return localIsCashCreditShipment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsCashCreditShipment
                               */
                               public void setIsCashCreditShipment(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsCashCreditShipmentTracker =
                                       true;
                                   
                                            this.localIsCashCreditShipment=param;
                                       

                               }
                            

                        /**
                        * field for IsCollectDuty
                        */

                        
                                    protected boolean localIsCollectDuty ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsCollectDutyTracker = false ;

                           public boolean isIsCollectDutySpecified(){
                               return localIsCollectDutyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsCollectDuty(){
                               return localIsCollectDuty;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsCollectDuty
                               */
                               public void setIsCollectDuty(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsCollectDutyTracker =
                                       true;
                                   
                                            this.localIsCollectDuty=param;
                                       

                               }
                            

                        /**
                        * field for IsInsuredShipment
                        */

                        
                                    protected boolean localIsInsuredShipment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsInsuredShipmentTracker = false ;

                           public boolean isIsInsuredShipmentSpecified(){
                               return localIsInsuredShipmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsInsuredShipment(){
                               return localIsInsuredShipment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsInsuredShipment
                               */
                               public void setIsInsuredShipment(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsInsuredShipmentTracker =
                                       true;
                                   
                                            this.localIsInsuredShipment=param;
                                       

                               }
                            

                        /**
                        * field for IsInternationalAnnexure
                        */

                        
                                    protected boolean localIsInternationalAnnexure ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsInternationalAnnexureTracker = false ;

                           public boolean isIsInternationalAnnexureSpecified(){
                               return localIsInternationalAnnexureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsInternationalAnnexure(){
                               return localIsInternationalAnnexure;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsInternationalAnnexure
                               */
                               public void setIsInternationalAnnexure(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsInternationalAnnexureTracker =
                                       true;
                                   
                                            this.localIsInternationalAnnexure=param;
                                       

                               }
                            

                        /**
                        * field for IsOverHandlingShipment
                        */

                        
                                    protected boolean localIsOverHandlingShipment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsOverHandlingShipmentTracker = false ;

                           public boolean isIsOverHandlingShipmentSpecified(){
                               return localIsOverHandlingShipmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsOverHandlingShipment(){
                               return localIsOverHandlingShipment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsOverHandlingShipment
                               */
                               public void setIsOverHandlingShipment(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsOverHandlingShipmentTracker =
                                       true;
                                   
                                            this.localIsOverHandlingShipment=param;
                                       

                               }
                            

                        /**
                        * field for IsPrepaidCollect
                        */

                        
                                    protected boolean localIsPrepaidCollect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsPrepaidCollectTracker = false ;

                           public boolean isIsPrepaidCollectSpecified(){
                               return localIsPrepaidCollectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsPrepaidCollect(){
                               return localIsPrepaidCollect;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsPrepaidCollect
                               */
                               public void setIsPrepaidCollect(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsPrepaidCollectTracker =
                                       true;
                                   
                                            this.localIsPrepaidCollect=param;
                                       

                               }
                            

                        /**
                        * field for IsPriority
                        */

                        
                                    protected boolean localIsPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsPriorityTracker = false ;

                           public boolean isIsPrioritySpecified(){
                               return localIsPriorityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsPriority(){
                               return localIsPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsPriority
                               */
                               public void setIsPriority(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsPriorityTracker =
                                       true;
                                   
                                            this.localIsPriority=param;
                                       

                               }
                            

                        /**
                        * field for IsRTOIMDTLY
                        */

                        
                                    protected java.lang.String localIsRTOIMDTLY ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsRTOIMDTLYTracker = false ;

                           public boolean isIsRTOIMDTLYSpecified(){
                               return localIsRTOIMDTLYTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsRTOIMDTLY(){
                               return localIsRTOIMDTLY;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsRTOIMDTLY
                               */
                               public void setIsRTOIMDTLY(java.lang.String param){
                            localIsRTOIMDTLYTracker = true;
                                   
                                            this.localIsRTOIMDTLY=param;
                                       

                               }
                            

                        /**
                        * field for IsSaturdayDelivery
                        */

                        
                                    protected boolean localIsSaturdayDelivery ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsSaturdayDeliveryTracker = false ;

                           public boolean isIsSaturdayDeliverySpecified(){
                               return localIsSaturdayDeliveryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsSaturdayDelivery(){
                               return localIsSaturdayDelivery;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsSaturdayDelivery
                               */
                               public void setIsSaturdayDelivery(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsSaturdayDeliveryTracker =
                                       true;
                                   
                                            this.localIsSaturdayDelivery=param;
                                       

                               }
                            

                        /**
                        * field for IsThermalCodSelected
                        */

                        
                                    protected boolean localIsThermalCodSelected ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsThermalCodSelectedTracker = false ;

                           public boolean isIsThermalCodSelectedSpecified(){
                               return localIsThermalCodSelectedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getIsThermalCodSelected(){
                               return localIsThermalCodSelected;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsThermalCodSelected
                               */
                               public void setIsThermalCodSelected(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       localIsThermalCodSelectedTracker =
                                       true;
                                   
                                            this.localIsThermalCodSelected=param;
                                       

                               }
                            

                        /**
                        * field for KGPound
                        */

                        
                                    protected java.lang.String localKGPound ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKGPoundTracker = false ;

                           public boolean isKGPoundSpecified(){
                               return localKGPoundTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getKGPound(){
                               return localKGPound;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param KGPound
                               */
                               public void setKGPound(java.lang.String param){
                            localKGPoundTracker = true;
                                   
                                            this.localKGPound=param;
                                       

                               }
                            

                        /**
                        * field for LocationCode
                        */

                        
                                    protected java.lang.String localLocationCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationCodeTracker = false ;

                           public boolean isLocationCodeSpecified(){
                               return localLocationCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocationCode(){
                               return localLocationCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LocationCode
                               */
                               public void setLocationCode(java.lang.String param){
                            localLocationCodeTracker = true;
                                   
                                            this.localLocationCode=param;
                                       

                               }
                            

                        /**
                        * field for MaximumReferenceNumberLength
                        */

                        
                                    protected int localMaximumReferenceNumberLength ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaximumReferenceNumberLengthTracker = false ;

                           public boolean isMaximumReferenceNumberLengthSpecified(){
                               return localMaximumReferenceNumberLengthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getMaximumReferenceNumberLength(){
                               return localMaximumReferenceNumberLength;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaximumReferenceNumberLength
                               */
                               public void setMaximumReferenceNumberLength(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localMaximumReferenceNumberLengthTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localMaximumReferenceNumberLength=param;
                                       

                               }
                            

                        /**
                        * field for MinimumReferenceNumberLength
                        */

                        
                                    protected int localMinimumReferenceNumberLength ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMinimumReferenceNumberLengthTracker = false ;

                           public boolean isMinimumReferenceNumberLengthSpecified(){
                               return localMinimumReferenceNumberLengthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getMinimumReferenceNumberLength(){
                               return localMinimumReferenceNumberLength;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MinimumReferenceNumberLength
                               */
                               public void setMinimumReferenceNumberLength(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localMinimumReferenceNumberLengthTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localMinimumReferenceNumberLength=param;
                                       

                               }
                            

                        /**
                        * field for MiscCharges1
                        */

                        
                                    protected double localMiscCharges1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMiscCharges1Tracker = false ;

                           public boolean isMiscCharges1Specified(){
                               return localMiscCharges1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getMiscCharges1(){
                               return localMiscCharges1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MiscCharges1
                               */
                               public void setMiscCharges1(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localMiscCharges1Tracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localMiscCharges1=param;
                                       

                               }
                            

                        /**
                        * field for MiscCharges1AgentCarrier
                        */

                        
                                    protected java.lang.String localMiscCharges1AgentCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMiscCharges1AgentCarrierTracker = false ;

                           public boolean isMiscCharges1AgentCarrierSpecified(){
                               return localMiscCharges1AgentCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMiscCharges1AgentCarrier(){
                               return localMiscCharges1AgentCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MiscCharges1AgentCarrier
                               */
                               public void setMiscCharges1AgentCarrier(java.lang.String param){
                            localMiscCharges1AgentCarrierTracker = true;
                                   
                                            this.localMiscCharges1AgentCarrier=param;
                                       

                               }
                            

                        /**
                        * field for Mode
                        */

                        
                                    protected java.lang.String localMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeTracker = false ;

                           public boolean isModeSpecified(){
                               return localModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMode(){
                               return localMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Mode
                               */
                               public void setMode(java.lang.String param){
                            localModeTracker = true;
                                   
                                            this.localMode=param;
                                       

                               }
                            

                        /**
                        * field for MpsNumbers
                        */

                        
                                    protected com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring localMpsNumbers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMpsNumbersTracker = false ;

                           public boolean isMpsNumbersSpecified(){
                               return localMpsNumbersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring
                           */
                           public  com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring getMpsNumbers(){
                               return localMpsNumbers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MpsNumbers
                               */
                               public void setMpsNumbers(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring param){
                            localMpsNumbersTracker = true;
                                   
                                            this.localMpsNumbers=param;
                                       

                               }
                            

                        /**
                        * field for Nawbid
                        */

                        
                                    protected int localNawbid ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNawbidTracker = false ;

                           public boolean isNawbidSpecified(){
                               return localNawbidTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getNawbid(){
                               return localNawbid;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nawbid
                               */
                               public void setNawbid(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localNawbidTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localNawbid=param;
                                       

                               }
                            

                        /**
                        * field for NumberOfDCGiven
                        */

                        
                                    protected double localNumberOfDCGiven ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberOfDCGivenTracker = false ;

                           public boolean isNumberOfDCGivenSpecified(){
                               return localNumberOfDCGivenTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getNumberOfDCGiven(){
                               return localNumberOfDCGiven;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumberOfDCGiven
                               */
                               public void setNumberOfDCGiven(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localNumberOfDCGivenTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localNumberOfDCGiven=param;
                                       

                               }
                            

                        /**
                        * field for OdaCharges
                        */

                        
                                    protected double localOdaCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOdaChargesTracker = false ;

                           public boolean isOdaChargesSpecified(){
                               return localOdaChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getOdaCharges(){
                               return localOdaCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OdaCharges
                               */
                               public void setOdaCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localOdaChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localOdaCharges=param;
                                       

                               }
                            

                        /**
                        * field for OdaFlag
                        */

                        
                                    protected java.lang.String localOdaFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOdaFlagTracker = false ;

                           public boolean isOdaFlagSpecified(){
                               return localOdaFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOdaFlag(){
                               return localOdaFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OdaFlag
                               */
                               public void setOdaFlag(java.lang.String param){
                            localOdaFlagTracker = true;
                                   
                                            this.localOdaFlag=param;
                                       

                               }
                            

                        /**
                        * field for OldWBCMode
                        */

                        
                                    protected java.lang.String localOldWBCMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOldWBCModeTracker = false ;

                           public boolean isOldWBCModeSpecified(){
                               return localOldWBCModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOldWBCMode(){
                               return localOldWBCMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OldWBCMode
                               */
                               public void setOldWBCMode(java.lang.String param){
                            localOldWBCModeTracker = true;
                                   
                                            this.localOldWBCMode=param;
                                       

                               }
                            

                        /**
                        * field for OriginArea
                        */

                        
                                    protected java.lang.String localOriginArea ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOriginAreaTracker = false ;

                           public boolean isOriginAreaSpecified(){
                               return localOriginAreaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOriginArea(){
                               return localOriginArea;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OriginArea
                               */
                               public void setOriginArea(java.lang.String param){
                            localOriginAreaTracker = true;
                                   
                                            this.localOriginArea=param;
                                       

                               }
                            

                        /**
                        * field for OriginServiceCenter
                        */

                        
                                    protected java.lang.String localOriginServiceCenter ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOriginServiceCenterTracker = false ;

                           public boolean isOriginServiceCenterSpecified(){
                               return localOriginServiceCenterTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOriginServiceCenter(){
                               return localOriginServiceCenter;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OriginServiceCenter
                               */
                               public void setOriginServiceCenter(java.lang.String param){
                            localOriginServiceCenterTracker = true;
                                   
                                            this.localOriginServiceCenter=param;
                                       

                               }
                            

                        /**
                        * field for OriginalServiceCentre
                        */

                        
                                    protected java.lang.String localOriginalServiceCentre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOriginalServiceCentreTracker = false ;

                           public boolean isOriginalServiceCentreSpecified(){
                               return localOriginalServiceCentreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOriginalServiceCentre(){
                               return localOriginalServiceCentre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OriginalServiceCentre
                               */
                               public void setOriginalServiceCentre(java.lang.String param){
                            localOriginalServiceCentreTracker = true;
                                   
                                            this.localOriginalServiceCentre=param;
                                       

                               }
                            

                        /**
                        * field for PUDate
                        */

                        
                                    protected java.util.Calendar localPUDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPUDateTracker = false ;

                           public boolean isPUDateSpecified(){
                               return localPUDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getPUDate(){
                               return localPUDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PUDate
                               */
                               public void setPUDate(java.util.Calendar param){
                            localPUDateTracker = true;
                                   
                                            this.localPUDate=param;
                                       

                               }
                            

                        /**
                        * field for PackageType
                        */

                        
                                    protected java.lang.String localPackageType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPackageTypeTracker = false ;

                           public boolean isPackageTypeSpecified(){
                               return localPackageTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPackageType(){
                               return localPackageType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PackageType
                               */
                               public void setPackageType(java.lang.String param){
                            localPackageTypeTracker = true;
                                   
                                            this.localPackageType=param;
                                       

                               }
                            

                        /**
                        * field for Packages
                        */

                        
                                    protected int localPackages ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPackagesTracker = false ;

                           public boolean isPackagesSpecified(){
                               return localPackagesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getPackages(){
                               return localPackages;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Packages
                               */
                               public void setPackages(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localPackagesTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localPackages=param;
                                       

                               }
                            

                        /**
                        * field for PaperworkDescription1
                        */

                        
                                    protected java.lang.String localPaperworkDescription1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaperworkDescription1Tracker = false ;

                           public boolean isPaperworkDescription1Specified(){
                               return localPaperworkDescription1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPaperworkDescription1(){
                               return localPaperworkDescription1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PaperworkDescription1
                               */
                               public void setPaperworkDescription1(java.lang.String param){
                            localPaperworkDescription1Tracker = true;
                                   
                                            this.localPaperworkDescription1=param;
                                       

                               }
                            

                        /**
                        * field for PaperworkDescription2
                        */

                        
                                    protected java.lang.String localPaperworkDescription2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaperworkDescription2Tracker = false ;

                           public boolean isPaperworkDescription2Specified(){
                               return localPaperworkDescription2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPaperworkDescription2(){
                               return localPaperworkDescription2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PaperworkDescription2
                               */
                               public void setPaperworkDescription2(java.lang.String param){
                            localPaperworkDescription2Tracker = true;
                                   
                                            this.localPaperworkDescription2=param;
                                       

                               }
                            

                        /**
                        * field for PaperworkDescription3
                        */

                        
                                    protected java.lang.String localPaperworkDescription3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPaperworkDescription3Tracker = false ;

                           public boolean isPaperworkDescription3Specified(){
                               return localPaperworkDescription3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPaperworkDescription3(){
                               return localPaperworkDescription3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PaperworkDescription3
                               */
                               public void setPaperworkDescription3(java.lang.String param){
                            localPaperworkDescription3Tracker = true;
                                   
                                            this.localPaperworkDescription3=param;
                                       

                               }
                            

                        /**
                        * field for PayableAt
                        */

                        
                                    protected java.lang.String localPayableAt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPayableAtTracker = false ;

                           public boolean isPayableAtSpecified(){
                               return localPayableAtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPayableAt(){
                               return localPayableAt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PayableAt
                               */
                               public void setPayableAt(java.lang.String param){
                            localPayableAtTracker = true;
                                   
                                            this.localPayableAt=param;
                                       

                               }
                            

                        /**
                        * field for PickupDate
                        */

                        
                                    protected java.util.Calendar localPickupDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPickupDateTracker = false ;

                           public boolean isPickupDateSpecified(){
                               return localPickupDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.util.Calendar
                           */
                           public  java.util.Calendar getPickupDate(){
                               return localPickupDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PickupDate
                               */
                               public void setPickupDate(java.util.Calendar param){
                            localPickupDateTracker = true;
                                   
                                            this.localPickupDate=param;
                                       

                               }
                            

                        /**
                        * field for PickupEmpCode
                        */

                        
                                    protected java.lang.String localPickupEmpCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPickupEmpCodeTracker = false ;

                           public boolean isPickupEmpCodeSpecified(){
                               return localPickupEmpCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPickupEmpCode(){
                               return localPickupEmpCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PickupEmpCode
                               */
                               public void setPickupEmpCode(java.lang.String param){
                            localPickupEmpCodeTracker = true;
                                   
                                            this.localPickupEmpCode=param;
                                       

                               }
                            

                        /**
                        * field for PickupEmployeeName
                        */

                        
                                    protected java.lang.String localPickupEmployeeName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPickupEmployeeNameTracker = false ;

                           public boolean isPickupEmployeeNameSpecified(){
                               return localPickupEmployeeNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPickupEmployeeName(){
                               return localPickupEmployeeName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PickupEmployeeName
                               */
                               public void setPickupEmployeeName(java.lang.String param){
                            localPickupEmployeeNameTracker = true;
                                   
                                            this.localPickupEmployeeName=param;
                                       

                               }
                            

                        /**
                        * field for PickupTime
                        */

                        
                                    protected java.lang.String localPickupTime ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPickupTimeTracker = false ;

                           public boolean isPickupTimeSpecified(){
                               return localPickupTimeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPickupTime(){
                               return localPickupTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PickupTime
                               */
                               public void setPickupTime(java.lang.String param){
                            localPickupTimeTracker = true;
                                   
                                            this.localPickupTime=param;
                                       

                               }
                            

                        /**
                        * field for PickupWalkin
                        */

                        
                                    protected java.lang.String localPickupWalkin ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPickupWalkinTracker = false ;

                           public boolean isPickupWalkinSpecified(){
                               return localPickupWalkinTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPickupWalkin(){
                               return localPickupWalkin;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PickupWalkin
                               */
                               public void setPickupWalkin(java.lang.String param){
                            localPickupWalkinTracker = true;
                                   
                                            this.localPickupWalkin=param;
                                       

                               }
                            

                        /**
                        * field for Pieces
                        */

                        
                                    protected java.lang.String localPieces ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPiecesTracker = false ;

                           public boolean isPiecesSpecified(){
                               return localPiecesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPieces(){
                               return localPieces;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Pieces
                               */
                               public void setPieces(java.lang.String param){
                            localPiecesTracker = true;
                                   
                                            this.localPieces=param;
                                       

                               }
                            

                        /**
                        * field for PosDiscount
                        */

                        
                                    protected double localPosDiscount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPosDiscountTracker = false ;

                           public boolean isPosDiscountSpecified(){
                               return localPosDiscountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getPosDiscount(){
                               return localPosDiscount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PosDiscount
                               */
                               public void setPosDiscount(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localPosDiscountTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localPosDiscount=param;
                                       

                               }
                            

                        /**
                        * field for PosDiscper
                        */

                        
                                    protected double localPosDiscper ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPosDiscperTracker = false ;

                           public boolean isPosDiscperSpecified(){
                               return localPosDiscperTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getPosDiscper(){
                               return localPosDiscper;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PosDiscper
                               */
                               public void setPosDiscper(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localPosDiscperTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localPosDiscper=param;
                                       

                               }
                            

                        /**
                        * field for PosPPCNo
                        */

                        
                                    protected java.lang.String localPosPPCNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPosPPCNoTracker = false ;

                           public boolean isPosPPCNoSpecified(){
                               return localPosPPCNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPosPPCNo(){
                               return localPosPPCNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PosPPCNo
                               */
                               public void setPosPPCNo(java.lang.String param){
                            localPosPPCNoTracker = true;
                                   
                                            this.localPosPPCNo=param;
                                       

                               }
                            

                        /**
                        * field for PosShippercode
                        */

                        
                                    protected java.lang.String localPosShippercode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPosShippercodeTracker = false ;

                           public boolean isPosShippercodeSpecified(){
                               return localPosShippercodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPosShippercode(){
                               return localPosShippercode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PosShippercode
                               */
                               public void setPosShippercode(java.lang.String param){
                            localPosShippercodeTracker = true;
                                   
                                            this.localPosShippercode=param;
                                       

                               }
                            

                        /**
                        * field for PrepaidCollect
                        */

                        
                                    protected java.lang.String localPrepaidCollect ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrepaidCollectTracker = false ;

                           public boolean isPrepaidCollectSpecified(){
                               return localPrepaidCollectTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrepaidCollect(){
                               return localPrepaidCollect;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrepaidCollect
                               */
                               public void setPrepaidCollect(java.lang.String param){
                            localPrepaidCollectTracker = true;
                                   
                                            this.localPrepaidCollect=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeAddr1
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeAddr1Tracker = false ;

                           public boolean isPreviousAWBConsigneeAddr1Specified(){
                               return localPreviousAWBConsigneeAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeAddr1(){
                               return localPreviousAWBConsigneeAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeAddr1
                               */
                               public void setPreviousAWBConsigneeAddr1(java.lang.String param){
                            localPreviousAWBConsigneeAddr1Tracker = true;
                                   
                                            this.localPreviousAWBConsigneeAddr1=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeAddr2
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeAddr2Tracker = false ;

                           public boolean isPreviousAWBConsigneeAddr2Specified(){
                               return localPreviousAWBConsigneeAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeAddr2(){
                               return localPreviousAWBConsigneeAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeAddr2
                               */
                               public void setPreviousAWBConsigneeAddr2(java.lang.String param){
                            localPreviousAWBConsigneeAddr2Tracker = true;
                                   
                                            this.localPreviousAWBConsigneeAddr2=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeAddr3City
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeAddr3City ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeAddr3CityTracker = false ;

                           public boolean isPreviousAWBConsigneeAddr3CitySpecified(){
                               return localPreviousAWBConsigneeAddr3CityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeAddr3City(){
                               return localPreviousAWBConsigneeAddr3City;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeAddr3City
                               */
                               public void setPreviousAWBConsigneeAddr3City(java.lang.String param){
                            localPreviousAWBConsigneeAddr3CityTracker = true;
                                   
                                            this.localPreviousAWBConsigneeAddr3City=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeMobile
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeMobileTracker = false ;

                           public boolean isPreviousAWBConsigneeMobileSpecified(){
                               return localPreviousAWBConsigneeMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeMobile(){
                               return localPreviousAWBConsigneeMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeMobile
                               */
                               public void setPreviousAWBConsigneeMobile(java.lang.String param){
                            localPreviousAWBConsigneeMobileTracker = true;
                                   
                                            this.localPreviousAWBConsigneeMobile=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeName
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeNameTracker = false ;

                           public boolean isPreviousAWBConsigneeNameSpecified(){
                               return localPreviousAWBConsigneeNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeName(){
                               return localPreviousAWBConsigneeName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeName
                               */
                               public void setPreviousAWBConsigneeName(java.lang.String param){
                            localPreviousAWBConsigneeNameTracker = true;
                                   
                                            this.localPreviousAWBConsigneeName=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneePincode
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneePincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneePincodeTracker = false ;

                           public boolean isPreviousAWBConsigneePincodeSpecified(){
                               return localPreviousAWBConsigneePincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneePincode(){
                               return localPreviousAWBConsigneePincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneePincode
                               */
                               public void setPreviousAWBConsigneePincode(java.lang.String param){
                            localPreviousAWBConsigneePincodeTracker = true;
                                   
                                            this.localPreviousAWBConsigneePincode=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeSenderAtn
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeSenderAtn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeSenderAtnTracker = false ;

                           public boolean isPreviousAWBConsigneeSenderAtnSpecified(){
                               return localPreviousAWBConsigneeSenderAtnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeSenderAtn(){
                               return localPreviousAWBConsigneeSenderAtn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeSenderAtn
                               */
                               public void setPreviousAWBConsigneeSenderAtn(java.lang.String param){
                            localPreviousAWBConsigneeSenderAtnTracker = true;
                                   
                                            this.localPreviousAWBConsigneeSenderAtn=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBConsigneeTelephone
                        */

                        
                                    protected java.lang.String localPreviousAWBConsigneeTelephone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBConsigneeTelephoneTracker = false ;

                           public boolean isPreviousAWBConsigneeTelephoneSpecified(){
                               return localPreviousAWBConsigneeTelephoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBConsigneeTelephone(){
                               return localPreviousAWBConsigneeTelephone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBConsigneeTelephone
                               */
                               public void setPreviousAWBConsigneeTelephone(java.lang.String param){
                            localPreviousAWBConsigneeTelephoneTracker = true;
                                   
                                            this.localPreviousAWBConsigneeTelephone=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBGetData
                        */

                        
                                    protected java.lang.String localPreviousAWBGetData ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBGetDataTracker = false ;

                           public boolean isPreviousAWBGetDataSpecified(){
                               return localPreviousAWBGetDataTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBGetData(){
                               return localPreviousAWBGetData;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBGetData
                               */
                               public void setPreviousAWBGetData(java.lang.String param){
                            localPreviousAWBGetDataTracker = true;
                                   
                                            this.localPreviousAWBGetData=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperAddr1
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperAddr1Tracker = false ;

                           public boolean isPreviousAWBShipperAddr1Specified(){
                               return localPreviousAWBShipperAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperAddr1(){
                               return localPreviousAWBShipperAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperAddr1
                               */
                               public void setPreviousAWBShipperAddr1(java.lang.String param){
                            localPreviousAWBShipperAddr1Tracker = true;
                                   
                                            this.localPreviousAWBShipperAddr1=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperAddr2
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperAddr2Tracker = false ;

                           public boolean isPreviousAWBShipperAddr2Specified(){
                               return localPreviousAWBShipperAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperAddr2(){
                               return localPreviousAWBShipperAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperAddr2
                               */
                               public void setPreviousAWBShipperAddr2(java.lang.String param){
                            localPreviousAWBShipperAddr2Tracker = true;
                                   
                                            this.localPreviousAWBShipperAddr2=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperAddr3City
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperAddr3City ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperAddr3CityTracker = false ;

                           public boolean isPreviousAWBShipperAddr3CitySpecified(){
                               return localPreviousAWBShipperAddr3CityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperAddr3City(){
                               return localPreviousAWBShipperAddr3City;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperAddr3City
                               */
                               public void setPreviousAWBShipperAddr3City(java.lang.String param){
                            localPreviousAWBShipperAddr3CityTracker = true;
                                   
                                            this.localPreviousAWBShipperAddr3City=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperMobile
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperMobileTracker = false ;

                           public boolean isPreviousAWBShipperMobileSpecified(){
                               return localPreviousAWBShipperMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperMobile(){
                               return localPreviousAWBShipperMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperMobile
                               */
                               public void setPreviousAWBShipperMobile(java.lang.String param){
                            localPreviousAWBShipperMobileTracker = true;
                                   
                                            this.localPreviousAWBShipperMobile=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperName
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperNameTracker = false ;

                           public boolean isPreviousAWBShipperNameSpecified(){
                               return localPreviousAWBShipperNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperName(){
                               return localPreviousAWBShipperName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperName
                               */
                               public void setPreviousAWBShipperName(java.lang.String param){
                            localPreviousAWBShipperNameTracker = true;
                                   
                                            this.localPreviousAWBShipperName=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperPincode
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperPincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperPincodeTracker = false ;

                           public boolean isPreviousAWBShipperPincodeSpecified(){
                               return localPreviousAWBShipperPincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperPincode(){
                               return localPreviousAWBShipperPincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperPincode
                               */
                               public void setPreviousAWBShipperPincode(java.lang.String param){
                            localPreviousAWBShipperPincodeTracker = true;
                                   
                                            this.localPreviousAWBShipperPincode=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperSenderAtn
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperSenderAtn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperSenderAtnTracker = false ;

                           public boolean isPreviousAWBShipperSenderAtnSpecified(){
                               return localPreviousAWBShipperSenderAtnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperSenderAtn(){
                               return localPreviousAWBShipperSenderAtn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperSenderAtn
                               */
                               public void setPreviousAWBShipperSenderAtn(java.lang.String param){
                            localPreviousAWBShipperSenderAtnTracker = true;
                                   
                                            this.localPreviousAWBShipperSenderAtn=param;
                                       

                               }
                            

                        /**
                        * field for PreviousAWBShipperTelephone
                        */

                        
                                    protected java.lang.String localPreviousAWBShipperTelephone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousAWBShipperTelephoneTracker = false ;

                           public boolean isPreviousAWBShipperTelephoneSpecified(){
                               return localPreviousAWBShipperTelephoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousAWBShipperTelephone(){
                               return localPreviousAWBShipperTelephone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousAWBShipperTelephone
                               */
                               public void setPreviousAWBShipperTelephone(java.lang.String param){
                            localPreviousAWBShipperTelephoneTracker = true;
                                   
                                            this.localPreviousAWBShipperTelephone=param;
                                       

                               }
                            

                        /**
                        * field for PreviousShipperCode
                        */

                        
                                    protected java.lang.String localPreviousShipperCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreviousShipperCodeTracker = false ;

                           public boolean isPreviousShipperCodeSpecified(){
                               return localPreviousShipperCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreviousShipperCode(){
                               return localPreviousShipperCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreviousShipperCode
                               */
                               public void setPreviousShipperCode(java.lang.String param){
                            localPreviousShipperCodeTracker = true;
                                   
                                            this.localPreviousShipperCode=param;
                                       

                               }
                            

                        /**
                        * field for PrintAwb
                        */

                        
                                    protected java.lang.String localPrintAwb ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrintAwbTracker = false ;

                           public boolean isPrintAwbSpecified(){
                               return localPrintAwbTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrintAwb(){
                               return localPrintAwb;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrintAwb
                               */
                               public void setPrintAwb(java.lang.String param){
                            localPrintAwbTracker = true;
                                   
                                            this.localPrintAwb=param;
                                       

                               }
                            

                        /**
                        * field for PrintMode
                        */

                        
                                    protected org.datacontract.schemas._2004._07.bd_entities_enums_operation.PrintingMode localPrintMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrintModeTracker = false ;

                           public boolean isPrintModeSpecified(){
                               return localPrintModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return org.datacontract.schemas._2004._07.bd_entities_enums_operation.PrintingMode
                           */
                           public  org.datacontract.schemas._2004._07.bd_entities_enums_operation.PrintingMode getPrintMode(){
                               return localPrintMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrintMode
                               */
                               public void setPrintMode(org.datacontract.schemas._2004._07.bd_entities_enums_operation.PrintingMode param){
                            localPrintModeTracker = param != null;
                                   
                                            this.localPrintMode=param;
                                       

                               }
                            

                        /**
                        * field for PrintingType
                        */

                        
                                    protected java.lang.String localPrintingType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrintingTypeTracker = false ;

                           public boolean isPrintingTypeSpecified(){
                               return localPrintingTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrintingType(){
                               return localPrintingType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrintingType
                               */
                               public void setPrintingType(java.lang.String param){
                            localPrintingTypeTracker = true;
                                   
                                            this.localPrintingType=param;
                                       

                               }
                            

                        /**
                        * field for ProductCode
                        */

                        
                                    protected java.lang.String localProductCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductCodeTracker = false ;

                           public boolean isProductCodeSpecified(){
                               return localProductCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductCode(){
                               return localProductCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductCode
                               */
                               public void setProductCode(java.lang.String param){
                            localProductCodeTracker = true;
                                   
                                            this.localProductCode=param;
                                       

                               }
                            

                        /**
                        * field for ProductType
                        */

                        
                                    protected java.lang.String localProductType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductTypeTracker = false ;

                           public boolean isProductTypeSpecified(){
                               return localProductTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductType(){
                               return localProductType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductType
                               */
                               public void setProductType(java.lang.String param){
                            localProductTypeTracker = true;
                                   
                                            this.localProductType=param;
                                       

                               }
                            

                        /**
                        * field for Promocode
                        */

                        
                                    protected java.lang.String localPromocode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPromocodeTracker = false ;

                           public boolean isPromocodeSpecified(){
                               return localPromocodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPromocode(){
                               return localPromocode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Promocode
                               */
                               public void setPromocode(java.lang.String param){
                            localPromocodeTracker = true;
                                   
                                            this.localPromocode=param;
                                       

                               }
                            

                        /**
                        * field for RasCharges
                        */

                        
                                    protected double localRasCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRasChargesTracker = false ;

                           public boolean isRasChargesSpecified(){
                               return localRasChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getRasCharges(){
                               return localRasCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RasCharges
                               */
                               public void setRasCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localRasChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localRasCharges=param;
                                       

                               }
                            

                        /**
                        * field for RateClass
                        */

                        
                                    protected java.lang.String localRateClass ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRateClassTracker = false ;

                           public boolean isRateClassSpecified(){
                               return localRateClassTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRateClass(){
                               return localRateClass;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RateClass
                               */
                               public void setRateClass(java.lang.String param){
                            localRateClassTracker = true;
                                   
                                            this.localRateClass=param;
                                       

                               }
                            

                        /**
                        * field for ReferenceAddnlRefPrint
                        */

                        
                                    protected java.lang.String localReferenceAddnlRefPrint ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReferenceAddnlRefPrintTracker = false ;

                           public boolean isReferenceAddnlRefPrintSpecified(){
                               return localReferenceAddnlRefPrintTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReferenceAddnlRefPrint(){
                               return localReferenceAddnlRefPrint;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReferenceAddnlRefPrint
                               */
                               public void setReferenceAddnlRefPrint(java.lang.String param){
                            localReferenceAddnlRefPrintTracker = true;
                                   
                                            this.localReferenceAddnlRefPrint=param;
                                       

                               }
                            

                        /**
                        * field for ReferenceNo
                        */

                        
                                    protected java.lang.String localReferenceNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReferenceNoTracker = false ;

                           public boolean isReferenceNoSpecified(){
                               return localReferenceNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReferenceNo(){
                               return localReferenceNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReferenceNo
                               */
                               public void setReferenceNo(java.lang.String param){
                            localReferenceNoTracker = true;
                                   
                                            this.localReferenceNo=param;
                                       

                               }
                            

                        /**
                        * field for Regulatory
                        */

                        
                                    protected double localRegulatory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRegulatoryTracker = false ;

                           public boolean isRegulatorySpecified(){
                               return localRegulatoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getRegulatory(){
                               return localRegulatory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Regulatory
                               */
                               public void setRegulatory(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localRegulatoryTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localRegulatory=param;
                                       

                               }
                            

                        /**
                        * field for RegulatoryAgentCarrier
                        */

                        
                                    protected java.lang.String localRegulatoryAgentCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRegulatoryAgentCarrierTracker = false ;

                           public boolean isRegulatoryAgentCarrierSpecified(){
                               return localRegulatoryAgentCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRegulatoryAgentCarrier(){
                               return localRegulatoryAgentCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RegulatoryAgentCarrier
                               */
                               public void setRegulatoryAgentCarrier(java.lang.String param){
                            localRegulatoryAgentCarrierTracker = true;
                                   
                                            this.localRegulatoryAgentCarrier=param;
                                       

                               }
                            

                        /**
                        * field for RiskCharges
                        */

                        
                                    protected double localRiskCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRiskChargesTracker = false ;

                           public boolean isRiskChargesSpecified(){
                               return localRiskChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getRiskCharges(){
                               return localRiskCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RiskCharges
                               */
                               public void setRiskCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localRiskChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localRiskCharges=param;
                                       

                               }
                            

                        /**
                        * field for RtoArea
                        */

                        
                                    protected java.lang.String localRtoArea ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRtoAreaTracker = false ;

                           public boolean isRtoAreaSpecified(){
                               return localRtoAreaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRtoArea(){
                               return localRtoArea;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RtoArea
                               */
                               public void setRtoArea(java.lang.String param){
                            localRtoAreaTracker = true;
                                   
                                            this.localRtoArea=param;
                                       

                               }
                            

                        /**
                        * field for RtoCodDestination
                        */

                        
                                    protected java.lang.String localRtoCodDestination ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRtoCodDestinationTracker = false ;

                           public boolean isRtoCodDestinationSpecified(){
                               return localRtoCodDestinationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRtoCodDestination(){
                               return localRtoCodDestination;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RtoCodDestination
                               */
                               public void setRtoCodDestination(java.lang.String param){
                            localRtoCodDestinationTracker = true;
                                   
                                            this.localRtoCodDestination=param;
                                       

                               }
                            

                        /**
                        * field for RtoCodDestinationPincode
                        */

                        
                                    protected java.lang.String localRtoCodDestinationPincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRtoCodDestinationPincodeTracker = false ;

                           public boolean isRtoCodDestinationPincodeSpecified(){
                               return localRtoCodDestinationPincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRtoCodDestinationPincode(){
                               return localRtoCodDestinationPincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RtoCodDestinationPincode
                               */
                               public void setRtoCodDestinationPincode(java.lang.String param){
                            localRtoCodDestinationPincodeTracker = true;
                                   
                                            this.localRtoCodDestinationPincode=param;
                                       

                               }
                            

                        /**
                        * field for RtoCodDestinationSc
                        */

                        
                                    protected java.lang.String localRtoCodDestinationSc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRtoCodDestinationScTracker = false ;

                           public boolean isRtoCodDestinationScSpecified(){
                               return localRtoCodDestinationScTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRtoCodDestinationSc(){
                               return localRtoCodDestinationSc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RtoCodDestinationSc
                               */
                               public void setRtoCodDestinationSc(java.lang.String param){
                            localRtoCodDestinationScTracker = true;
                                   
                                            this.localRtoCodDestinationSc=param;
                                       

                               }
                            

                        /**
                        * field for RtoCode
                        */

                        
                                    protected java.lang.String localRtoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRtoCodeTracker = false ;

                           public boolean isRtoCodeSpecified(){
                               return localRtoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRtoCode(){
                               return localRtoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RtoCode
                               */
                               public void setRtoCode(java.lang.String param){
                            localRtoCodeTracker = true;
                                   
                                            this.localRtoCode=param;
                                       

                               }
                            

                        /**
                        * field for SFCPrepaidValue
                        */

                        
                                    protected double localSFCPrepaidValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSFCPrepaidValueTracker = false ;

                           public boolean isSFCPrepaidValueSpecified(){
                               return localSFCPrepaidValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getSFCPrepaidValue(){
                               return localSFCPrepaidValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SFCPrepaidValue
                               */
                               public void setSFCPrepaidValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localSFCPrepaidValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localSFCPrepaidValue=param;
                                       

                               }
                            

                        /**
                        * field for SFCValue
                        */

                        
                                    protected double localSFCValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSFCValueTracker = false ;

                           public boolean isSFCValueSpecified(){
                               return localSFCValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getSFCValue(){
                               return localSFCValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SFCValue
                               */
                               public void setSFCValue(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localSFCValueTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localSFCValue=param;
                                       

                               }
                            

                        /**
                        * field for SalesTax
                        */

                        
                                    protected java.lang.String localSalesTax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalesTaxTracker = false ;

                           public boolean isSalesTaxSpecified(){
                               return localSalesTaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSalesTax(){
                               return localSalesTax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SalesTax
                               */
                               public void setSalesTax(java.lang.String param){
                            localSalesTaxTracker = true;
                                   
                                            this.localSalesTax=param;
                                       

                               }
                            

                        /**
                        * field for ShipperAddr1
                        */

                        
                                    protected java.lang.String localShipperAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperAddr1Tracker = false ;

                           public boolean isShipperAddr1Specified(){
                               return localShipperAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperAddr1(){
                               return localShipperAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperAddr1
                               */
                               public void setShipperAddr1(java.lang.String param){
                            localShipperAddr1Tracker = true;
                                   
                                            this.localShipperAddr1=param;
                                       

                               }
                            

                        /**
                        * field for ShipperAddr2
                        */

                        
                                    protected java.lang.String localShipperAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperAddr2Tracker = false ;

                           public boolean isShipperAddr2Specified(){
                               return localShipperAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperAddr2(){
                               return localShipperAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperAddr2
                               */
                               public void setShipperAddr2(java.lang.String param){
                            localShipperAddr2Tracker = true;
                                   
                                            this.localShipperAddr2=param;
                                       

                               }
                            

                        /**
                        * field for ShipperAddr3City
                        */

                        
                                    protected java.lang.String localShipperAddr3City ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperAddr3CityTracker = false ;

                           public boolean isShipperAddr3CitySpecified(){
                               return localShipperAddr3CityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperAddr3City(){
                               return localShipperAddr3City;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperAddr3City
                               */
                               public void setShipperAddr3City(java.lang.String param){
                            localShipperAddr3CityTracker = true;
                                   
                                            this.localShipperAddr3City=param;
                                       

                               }
                            

                        /**
                        * field for ShipperCode
                        */

                        
                                    protected java.lang.String localShipperCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperCodeTracker = false ;

                           public boolean isShipperCodeSpecified(){
                               return localShipperCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperCode(){
                               return localShipperCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperCode
                               */
                               public void setShipperCode(java.lang.String param){
                            localShipperCodeTracker = true;
                                   
                                            this.localShipperCode=param;
                                       

                               }
                            

                        /**
                        * field for ShipperMobileNo
                        */

                        
                                    protected java.lang.String localShipperMobileNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperMobileNoTracker = false ;

                           public boolean isShipperMobileNoSpecified(){
                               return localShipperMobileNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperMobileNo(){
                               return localShipperMobileNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperMobileNo
                               */
                               public void setShipperMobileNo(java.lang.String param){
                            localShipperMobileNoTracker = true;
                                   
                                            this.localShipperMobileNo=param;
                                       

                               }
                            

                        /**
                        * field for ShipperName
                        */

                        
                                    protected java.lang.String localShipperName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperNameTracker = false ;

                           public boolean isShipperNameSpecified(){
                               return localShipperNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperName(){
                               return localShipperName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperName
                               */
                               public void setShipperName(java.lang.String param){
                            localShipperNameTracker = true;
                                   
                                            this.localShipperName=param;
                                       

                               }
                            

                        /**
                        * field for ShipperPhoneNo
                        */

                        
                                    protected java.lang.String localShipperPhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperPhoneNoTracker = false ;

                           public boolean isShipperPhoneNoSpecified(){
                               return localShipperPhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperPhoneNo(){
                               return localShipperPhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperPhoneNo
                               */
                               public void setShipperPhoneNo(java.lang.String param){
                            localShipperPhoneNoTracker = true;
                                   
                                            this.localShipperPhoneNo=param;
                                       

                               }
                            

                        /**
                        * field for ShipperPincode
                        */

                        
                                    protected java.lang.String localShipperPincode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperPincodeTracker = false ;

                           public boolean isShipperPincodeSpecified(){
                               return localShipperPincodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperPincode(){
                               return localShipperPincode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperPincode
                               */
                               public void setShipperPincode(java.lang.String param){
                            localShipperPincodeTracker = true;
                                   
                                            this.localShipperPincode=param;
                                       

                               }
                            

                        /**
                        * field for ShipperSenderAtn
                        */

                        
                                    protected java.lang.String localShipperSenderAtn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShipperSenderAtnTracker = false ;

                           public boolean isShipperSenderAtnSpecified(){
                               return localShipperSenderAtnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShipperSenderAtn(){
                               return localShipperSenderAtn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShipperSenderAtn
                               */
                               public void setShipperSenderAtn(java.lang.String param){
                            localShipperSenderAtnTracker = true;
                                   
                                            this.localShipperSenderAtn=param;
                                       

                               }
                            

                        /**
                        * field for SmartBoxTypeA
                        */

                        
                                    protected int localSmartBoxTypeA ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSmartBoxTypeATracker = false ;

                           public boolean isSmartBoxTypeASpecified(){
                               return localSmartBoxTypeATracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getSmartBoxTypeA(){
                               return localSmartBoxTypeA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SmartBoxTypeA
                               */
                               public void setSmartBoxTypeA(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localSmartBoxTypeATracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localSmartBoxTypeA=param;
                                       

                               }
                            

                        /**
                        * field for SmartBoxTypeB
                        */

                        
                                    protected int localSmartBoxTypeB ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSmartBoxTypeBTracker = false ;

                           public boolean isSmartBoxTypeBSpecified(){
                               return localSmartBoxTypeBTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getSmartBoxTypeB(){
                               return localSmartBoxTypeB;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SmartBoxTypeB
                               */
                               public void setSmartBoxTypeB(int param){
                            
                                       // setting primitive attribute tracker to true
                                       localSmartBoxTypeBTracker =
                                       param != java.lang.Integer.MIN_VALUE;
                                   
                                            this.localSmartBoxTypeB=param;
                                       

                               }
                            

                        /**
                        * field for SpecHandling
                        */

                        
                                    protected double localSpecHandling ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSpecHandlingTracker = false ;

                           public boolean isSpecHandlingSpecified(){
                               return localSpecHandlingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getSpecHandling(){
                               return localSpecHandling;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SpecHandling
                               */
                               public void setSpecHandling(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localSpecHandlingTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localSpecHandling=param;
                                       

                               }
                            

                        /**
                        * field for SpecialInstructions
                        */

                        
                                    protected java.lang.String localSpecialInstructions ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSpecialInstructionsTracker = false ;

                           public boolean isSpecialInstructionsSpecified(){
                               return localSpecialInstructionsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSpecialInstructions(){
                               return localSpecialInstructions;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SpecialInstructions
                               */
                               public void setSpecialInstructions(java.lang.String param){
                            localSpecialInstructionsTracker = true;
                                   
                                            this.localSpecialInstructions=param;
                                       

                               }
                            

                        /**
                        * field for Statistical
                        */

                        
                                    protected double localStatistical ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatisticalTracker = false ;

                           public boolean isStatisticalSpecified(){
                               return localStatisticalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getStatistical(){
                               return localStatistical;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Statistical
                               */
                               public void setStatistical(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localStatisticalTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localStatistical=param;
                                       

                               }
                            

                        /**
                        * field for StatisticalAgentCarrier
                        */

                        
                                    protected java.lang.String localStatisticalAgentCarrier ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatisticalAgentCarrierTracker = false ;

                           public boolean isStatisticalAgentCarrierSpecified(){
                               return localStatisticalAgentCarrierTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatisticalAgentCarrier(){
                               return localStatisticalAgentCarrier;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StatisticalAgentCarrier
                               */
                               public void setStatisticalAgentCarrier(java.lang.String param){
                            localStatisticalAgentCarrierTracker = true;
                                   
                                            this.localStatisticalAgentCarrier=param;
                                       

                               }
                            

                        /**
                        * field for SubCode
                        */

                        
                                    protected java.lang.String localSubCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubCodeTracker = false ;

                           public boolean isSubCodeSpecified(){
                               return localSubCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubCode(){
                               return localSubCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SubCode
                               */
                               public void setSubCode(java.lang.String param){
                            localSubCodeTracker = true;
                                   
                                            this.localSubCode=param;
                                       

                               }
                            

                        /**
                        * field for TddCharges
                        */

                        
                                    protected double localTddCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTddChargesTracker = false ;

                           public boolean isTddChargesSpecified(){
                               return localTddChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getTddCharges(){
                               return localTddCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TddCharges
                               */
                               public void setTddCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localTddChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localTddCharges=param;
                                       

                               }
                            

                        /**
                        * field for TemporaryDestinationServiceCentre
                        */

                        
                                    protected java.lang.String localTemporaryDestinationServiceCentre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTemporaryDestinationServiceCentreTracker = false ;

                           public boolean isTemporaryDestinationServiceCentreSpecified(){
                               return localTemporaryDestinationServiceCentreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTemporaryDestinationServiceCentre(){
                               return localTemporaryDestinationServiceCentre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TemporaryDestinationServiceCentre
                               */
                               public void setTemporaryDestinationServiceCentre(java.lang.String param){
                            localTemporaryDestinationServiceCentreTracker = true;
                                   
                                            this.localTemporaryDestinationServiceCentre=param;
                                       

                               }
                            

                        /**
                        * field for TokenNumber
                        */

                        
                                    protected double localTokenNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTokenNumberTracker = false ;

                           public boolean isTokenNumberSpecified(){
                               return localTokenNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getTokenNumber(){
                               return localTokenNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TokenNumber
                               */
                               public void setTokenNumber(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localTokenNumberTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localTokenNumber=param;
                                       

                               }
                            

                        /**
                        * field for TotalAmount
                        */

                        
                                    protected double localTotalAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalAmountTracker = false ;

                           public boolean isTotalAmountSpecified(){
                               return localTotalAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getTotalAmount(){
                               return localTotalAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotalAmount
                               */
                               public void setTotalAmount(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localTotalAmountTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localTotalAmount=param;
                                       

                               }
                            

                        /**
                        * field for TransactionCode
                        */

                        
                                    protected java.lang.String localTransactionCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTransactionCodeTracker = false ;

                           public boolean isTransactionCodeSpecified(){
                               return localTransactionCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTransactionCode(){
                               return localTransactionCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TransactionCode
                               */
                               public void setTransactionCode(java.lang.String param){
                            localTransactionCodeTracker = true;
                                   
                                            this.localTransactionCode=param;
                                       

                               }
                            

                        /**
                        * field for ValCharges
                        */

                        
                                    protected double localValCharges ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValChargesTracker = false ;

                           public boolean isValChargesSpecified(){
                               return localValChargesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getValCharges(){
                               return localValCharges;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ValCharges
                               */
                               public void setValCharges(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localValChargesTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localValCharges=param;
                                       

                               }
                            

                        /**
                        * field for Weight
                        */

                        
                                    protected double localWeight ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWeightTracker = false ;

                           public boolean isWeightSpecified(){
                               return localWeightTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getWeight(){
                               return localWeight;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Weight
                               */
                               public void setWeight(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localWeightTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localWeight=param;
                                       

                               }
                            

                        /**
                        * field for Isrto074
                        */

                        
                                    protected java.lang.String localIsrto074 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsrto074Tracker = false ;

                           public boolean isIsrto074Specified(){
                               return localIsrto074Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsrto074(){
                               return localIsrto074;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Isrto074
                               */
                               public void setIsrto074(java.lang.String param){
                            localIsrto074Tracker = true;
                                   
                                            this.localIsrto074=param;
                                       

                               }
                            

                        /**
                        * field for NetAmountp2P
                        */

                        
                                    protected double localNetAmountp2P ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNetAmountp2PTracker = false ;

                           public boolean isNetAmountp2PSpecified(){
                               return localNetAmountp2PTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return double
                           */
                           public  double getNetAmountp2P(){
                               return localNetAmountp2P;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NetAmountp2P
                               */
                               public void setNetAmountp2P(double param){
                            
                                       // setting primitive attribute tracker to true
                                       localNetAmountp2PTracker =
                                       !java.lang.Double.isNaN(param);
                                   
                                            this.localNetAmountp2P=param;
                                       

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               return factory.createOMElement(new org.apache.axis2.databinding.ADBDataSource(this,parentQName));
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://schemas.datacontract.org/2004/07/BD.Entities.Area");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AWBDataEntry",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AWBDataEntry",
                           xmlWriter);
                   }

                if (localHandheldTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Common";
                                    writeStartElement(null, namespace, "Handheld", xmlWriter);
                             

                                          if (localHandheld==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHandheld);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Common";
                                    writeStartElement(null, namespace, "Location", xmlWriter);
                             

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLoginIdTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Common";
                                    writeStartElement(null, namespace, "LoginId", xmlWriter);
                             

                                          if (localLoginId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLoginId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localModifiedDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ModifiedDate", xmlWriter);
                             

                                          if (localModifiedDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ModifiedDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifiedDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAWBFeeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AWBFee", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localAWBFee)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("AWBFee cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAWBFee));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAWBFeeAgentCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AWBFeeAgentCarrier", xmlWriter);
                             

                                          if (localAWBFeeAgentCarrier==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAWBFeeAgentCarrier);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActualWeightTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ActualWeight", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localActualWeight)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ActualWeight cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActualWeight));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAdditionalRefNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AdditionalRefNumber", xmlWriter);
                             

                                          if (localAdditionalRefNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAdditionalRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAgentCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AgentCode", xmlWriter);
                             

                                          if (localAgentCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAgentCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmountToCollectTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AmountToCollect", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localAmountToCollect)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("AmountToCollect cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmountToCollect));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApexPrepaidValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ApexPrepaidValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localApexPrepaidValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ApexPrepaidValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApexPrepaidValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApexValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ApexValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localApexValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ApexValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApexValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAwbDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AwbDate", xmlWriter);
                             

                                          if (localAwbDate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAwbDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAwbNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "AwbNumber", xmlWriter);
                             

                                          if (localAwbNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAwbNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBaggedInLocationTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BaggedInLocation", xmlWriter);
                             

                                          if (localBaggedInLocation==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBaggedInLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBatchCountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BatchCount", xmlWriter);
                             

                                          if (localBatchCount==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBatchCount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBatchNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BatchNumber", xmlWriter);
                             

                                          if (localBatchNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBatchNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBillThirdPartyAreaCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BillThirdPartyAreaCode", xmlWriter);
                             

                                          if (localBillThirdPartyAreaCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBillThirdPartyAreaCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBillThirdPartyCustomerCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BillThirdPartyCustomerCode", xmlWriter);
                             

                                          if (localBillThirdPartyCustomerCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBillThirdPartyCustomerCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBulkEntryTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "BulkEntry", xmlWriter);
                             

                                          if (localBulkEntry==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBulkEntry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCafChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CafCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localCafCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("CafCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCafCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCardCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CardCode", xmlWriter);
                             

                                          if (localCardCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCardExpiryDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CardExpiryDate", xmlWriter);
                             

                                          if (localCardExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardExpiryDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCardHolderNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CardHolderName", xmlWriter);
                             

                                          if (localCardHolderName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardHolderName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCartageTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Cartage", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localCartage)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Cartage cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCartage));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCartageAgentCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CartageAgentCarrier", xmlWriter);
                             

                                          if (localCartageAgentCarrier==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCartageAgentCarrier);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCashMemoNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CashMemoNo", xmlWriter);
                             
                                               if (localCashMemoNo==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("CashMemoNo cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCashMemoNo));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCftRateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CftRate", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localCftRate)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("CftRate cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCftRate));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChargeWeightTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ChargeWeight", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localChargeWeight)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ChargeWeight cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChargeWeight));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localColctChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ColctCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localColctCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ColctCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localColctCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localCommValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("CommValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCommValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommodityCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommodityCode", xmlWriter);
                             

                                          if (localCommodityCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCommodityCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommodityDescription1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommodityDescription1", xmlWriter);
                             

                                          if (localCommodityDescription1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCommodityDescription1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommodityDescription2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommodityDescription2", xmlWriter);
                             

                                          if (localCommodityDescription2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCommodityDescription2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommodityDescription3Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommodityDescription3", xmlWriter);
                             

                                          if (localCommodityDescription3==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCommodityDescription3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommodityNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CommodityName", xmlWriter);
                             

                                          if (localCommodityName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCommodityName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAddr1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAddr1", xmlWriter);
                             

                                          if (localConsigneeAddr1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAddr2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAddr2", xmlWriter);
                             

                                          if (localConsigneeAddr2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAddr3CityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAddr3City", xmlWriter);
                             

                                          if (localConsigneeAddr3City==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAddr3City);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateAddr1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateAddr1", xmlWriter);
                             

                                          if (localConsigneeAlternateAddr1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateAddr2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateAddr2", xmlWriter);
                             

                                          if (localConsigneeAlternateAddr2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateAddr3Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateAddr3", xmlWriter);
                             

                                          if (localConsigneeAlternateAddr3==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateAddr3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateAttnTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateAttn", xmlWriter);
                             

                                          if (localConsigneeAlternateAttn==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateAttn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateCityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateCity", xmlWriter);
                             

                                          if (localConsigneeAlternateCity==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternateNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternateName", xmlWriter);
                             

                                          if (localConsigneeAlternateName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternateName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternatePhoneNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternatePhoneNo", xmlWriter);
                             

                                          if (localConsigneeAlternatePhoneNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternatePhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeAlternatePincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeAlternatePincode", xmlWriter);
                             

                                          if (localConsigneeAlternatePincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeAlternatePincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeCode", xmlWriter);
                             

                                          if (localConsigneeCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeMobileNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeMobileNo", xmlWriter);
                             

                                          if (localConsigneeMobileNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeMobileNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeName", xmlWriter);
                             

                                          if (localConsigneeName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneePhoneNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneePhoneNo", xmlWriter);
                             

                                          if (localConsigneePhoneNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneePhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneePincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneePincode", xmlWriter);
                             

                                          if (localConsigneePincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneePincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localConsigneeSenderAtnTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ConsigneeSenderAtn", xmlWriter);
                             

                                          if (localConsigneeSenderAtn==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsigneeSenderAtn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CountryName", xmlWriter);
                             

                                          if (localCountryName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountryName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCreditTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Credit", xmlWriter);
                             

                                          if (localCredit==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCredit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCreditCardNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CreditCardNo", xmlWriter);
                             

                                          if (localCreditCardNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCreditCardNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrencyCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CurrencyCode", xmlWriter);
                             

                                          if (localCurrencyCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrencyCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "CustomerCode", xmlWriter);
                             

                                          if (localCustomerCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDCChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DCCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDCCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DCCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDCCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDPValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DPValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDPValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DPValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDPValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDataLoggerTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DataLoggerType", xmlWriter);
                             

                                          if (localDataLoggerType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDataLoggerType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDdpShipmentTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DdpShipment", xmlWriter);
                             

                                          if (localDdpShipment==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDdpShipment);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDeclaredValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DeclaredValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDeclaredValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DeclaredValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDeclaredValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDeliveryDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DeliveryDate", xmlWriter);
                             

                                          if (localDeliveryDate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDeliveryDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDestinationAreaTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DestinationArea", xmlWriter);
                             

                                          if (localDestinationArea==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDestinationArea);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDestinationServiceCentreTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DestinationServiceCentre", xmlWriter);
                             

                                          if (localDestinationServiceCentre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDestinationServiceCentre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDetentionChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DetentionCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDetentionCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DetentionCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDetentionCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDhlAccountNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DhlAccountNumber", xmlWriter);
                             

                                          if (localDhlAccountNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDhlAccountNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDimBreadthTracker){
                                    if (localDimBreadth==null){

                                        writeStartElement(null, "http://schemas.datacontract.org/2004/07/BD.Entities.Area", "DimBreadth", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDimBreadth.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimBreadth"),
                                        xmlWriter);
                                    }
                                } if (localDimHeightTracker){
                                    if (localDimHeight==null){

                                        writeStartElement(null, "http://schemas.datacontract.org/2004/07/BD.Entities.Area", "DimHeight", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDimHeight.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimHeight"),
                                        xmlWriter);
                                    }
                                } if (localDimLengthTracker){
                                    if (localDimLength==null){

                                        writeStartElement(null, "http://schemas.datacontract.org/2004/07/BD.Entities.Area", "DimLength", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDimLength.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimLength"),
                                        xmlWriter);
                                    }
                                } if (localDimPiecesTracker){
                                    if (localDimPieces==null){

                                        writeStartElement(null, "http://schemas.datacontract.org/2004/07/BD.Entities.Area", "DimPieces", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localDimPieces.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimPieces"),
                                        xmlWriter);
                                    }
                                } if (localDimWeightTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DimWeight", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDimWeight)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DimWeight cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDimWeight));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDocChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DocCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDocCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DocCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDodAmountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DodAmount", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDodAmount)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DodAmount cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDodAmount));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDryIceWeightTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DryIceWeight", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDryIceWeight)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DryIceWeight cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDryIceWeight));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDueAgentTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DueAgent", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDueAgent)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DueAgent cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDueAgent));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDueCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DueCarrier", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDueCarrier)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DueCarrier cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDueCarrier));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDutyPaidAmountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "DutyPaidAmount", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localDutyPaidAmount)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("DutyPaidAmount cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyPaidAmount));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEccChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EccCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localEccCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("EccCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEccCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailIdTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EmailId", xmlWriter);
                             

                                          if (localEmailId==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmailId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployeeCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EmployeeCode", xmlWriter);
                             

                                          if (localEmployeeCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployeeCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEsaCftRateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EsaCftRate", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localEsaCftRate)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("EsaCftRate cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEsaCftRate));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEsaChargesGrandTotalTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EsaChargesGrandTotal", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localEsaChargesGrandTotal)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("EsaChargesGrandTotal cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEsaChargesGrandTotal));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEsaChargesServiceTaxPlusCessTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EsaChargesServiceTaxPlusCess", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localEsaChargesServiceTaxPlusCess)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("EsaChargesServiceTaxPlusCess cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEsaChargesServiceTaxPlusCess));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEsaChargesTotalTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EsaChargesTotal", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localEsaChargesTotal)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("EsaChargesTotal cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEsaChargesTotal));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEsaCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "EsaCode", xmlWriter);
                             

                                          if (localEsaCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEsaCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExchangeRateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ExchangeRate", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localExchangeRate)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ExchangeRate cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExchangeRate));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExchangeUnitsTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ExchangeUnits", xmlWriter);
                             
                                               if (localExchangeUnits==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ExchangeUnits cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExchangeUnits));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFSAmountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FSAmount", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localFSAmount)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("FSAmount cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFSAmount));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFavouringNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FavouringName", xmlWriter);
                             

                                          if (localFavouringName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFavouringName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlfmTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Flfm", xmlWriter);
                             

                                          if (localFlfm==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlfm);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFocCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FocCode", xmlWriter);
                             

                                          if (localFocCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFocCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFocDescriptionTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FocDescription", xmlWriter);
                             

                                          if (localFocDescription==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFocDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFodChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FodCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localFodCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("FodCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFodCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFodCodFlagTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FodCodFlag", xmlWriter);
                             

                                          if (localFodCodFlag==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFodCodFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFovTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "FovType", xmlWriter);
                             

                                          if (localFovType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFovType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFrieghtTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Frieght", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localFrieght)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Frieght cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFrieght));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHCChargeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "HCCharge", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localHCCharge)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("HCCharge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHCCharge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIATACodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IATACode", xmlWriter);
                             

                                          if (localIATACode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIATACode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localISDGSHIPMENTTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ISDGSHIPMENT", xmlWriter);
                             

                                          if (localISDGSHIPMENT==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localISDGSHIPMENT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImportTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ImportType", xmlWriter);
                             

                                          if (localImportType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImportType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncotermCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IncotermCode", xmlWriter);
                             

                                          if (localIncotermCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIncotermCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncotermDescriptionTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IncotermDescription", xmlWriter);
                             

                                          if (localIncotermDescription==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIncotermDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInrValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "InrValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localInrValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("InrValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInrValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInvoiceNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "InvoiceNumber", xmlWriter);
                             

                                          if (localInvoiceNumber==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInvoiceNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsBondedATATracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsBondedATA", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsBondedATA cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsBondedATA));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsCashCreditShipmentTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsCashCreditShipment", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsCashCreditShipment cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsCashCreditShipment));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsCollectDutyTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsCollectDuty", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsCollectDuty cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsCollectDuty));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsInsuredShipmentTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsInsuredShipment", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsInsuredShipment cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsInsuredShipment));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsInternationalAnnexureTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsInternationalAnnexure", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsInternationalAnnexure cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsInternationalAnnexure));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsOverHandlingShipmentTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsOverHandlingShipment", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsOverHandlingShipment cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsOverHandlingShipment));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsPrepaidCollectTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsPrepaidCollect", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsPrepaidCollect cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPrepaidCollect));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsPriorityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsPriority", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsPriority cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPriority));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsRTOIMDTLYTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsRTOIMDTLY", xmlWriter);
                             

                                          if (localIsRTOIMDTLY==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsRTOIMDTLY);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsSaturdayDeliveryTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsSaturdayDelivery", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsSaturdayDelivery cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsSaturdayDelivery));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsThermalCodSelectedTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "IsThermalCodSelected", xmlWriter);
                             
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("IsThermalCodSelected cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsThermalCodSelected));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKGPoundTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "KGPound", xmlWriter);
                             

                                          if (localKGPound==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localKGPound);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "LocationCode", xmlWriter);
                             

                                          if (localLocationCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocationCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaximumReferenceNumberLengthTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "MaximumReferenceNumberLength", xmlWriter);
                             
                                               if (localMaximumReferenceNumberLength==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("MaximumReferenceNumberLength cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaximumReferenceNumberLength));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMinimumReferenceNumberLengthTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "MinimumReferenceNumberLength", xmlWriter);
                             
                                               if (localMinimumReferenceNumberLength==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("MinimumReferenceNumberLength cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMinimumReferenceNumberLength));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMiscCharges1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "MiscCharges1", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localMiscCharges1)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("MiscCharges1 cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMiscCharges1));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMiscCharges1AgentCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "MiscCharges1AgentCarrier", xmlWriter);
                             

                                          if (localMiscCharges1AgentCarrier==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMiscCharges1AgentCarrier);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localModeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Mode", xmlWriter);
                             

                                          if (localMode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMpsNumbersTracker){
                                    if (localMpsNumbers==null){

                                        writeStartElement(null, "http://schemas.datacontract.org/2004/07/BD.Entities.Area", "MpsNumbers", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localMpsNumbers.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MpsNumbers"),
                                        xmlWriter);
                                    }
                                } if (localNawbidTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Nawbid", xmlWriter);
                             
                                               if (localNawbid==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Nawbid cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNawbid));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberOfDCGivenTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "NumberOfDCGiven", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localNumberOfDCGiven)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("NumberOfDCGiven cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumberOfDCGiven));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOdaChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OdaCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localOdaCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("OdaCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOdaCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOdaFlagTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OdaFlag", xmlWriter);
                             

                                          if (localOdaFlag==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOdaFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOldWBCModeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OldWBCMode", xmlWriter);
                             

                                          if (localOldWBCMode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOldWBCMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOriginAreaTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OriginArea", xmlWriter);
                             

                                          if (localOriginArea==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOriginArea);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOriginServiceCenterTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OriginServiceCenter", xmlWriter);
                             

                                          if (localOriginServiceCenter==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOriginServiceCenter);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOriginalServiceCentreTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "OriginalServiceCentre", xmlWriter);
                             

                                          if (localOriginalServiceCentre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOriginalServiceCentre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPUDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PUDate", xmlWriter);
                             

                                          if (localPUDate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPUDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPackageTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PackageType", xmlWriter);
                             

                                          if (localPackageType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPackageType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPackagesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Packages", xmlWriter);
                             
                                               if (localPackages==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Packages cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPackages));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaperworkDescription1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PaperworkDescription1", xmlWriter);
                             

                                          if (localPaperworkDescription1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPaperworkDescription1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaperworkDescription2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PaperworkDescription2", xmlWriter);
                             

                                          if (localPaperworkDescription2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPaperworkDescription2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPaperworkDescription3Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PaperworkDescription3", xmlWriter);
                             

                                          if (localPaperworkDescription3==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPaperworkDescription3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPayableAtTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PayableAt", xmlWriter);
                             

                                          if (localPayableAt==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPayableAt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPickupDateTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PickupDate", xmlWriter);
                             

                                          if (localPickupDate==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPickupDate));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPickupEmpCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PickupEmpCode", xmlWriter);
                             

                                          if (localPickupEmpCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPickupEmpCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPickupEmployeeNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PickupEmployeeName", xmlWriter);
                             

                                          if (localPickupEmployeeName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPickupEmployeeName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPickupTimeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PickupTime", xmlWriter);
                             

                                          if (localPickupTime==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPickupTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPickupWalkinTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PickupWalkin", xmlWriter);
                             

                                          if (localPickupWalkin==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPickupWalkin);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPiecesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Pieces", xmlWriter);
                             

                                          if (localPieces==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPieces);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPosDiscountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PosDiscount", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localPosDiscount)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("PosDiscount cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPosDiscount));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPosDiscperTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PosDiscper", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localPosDiscper)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("PosDiscper cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPosDiscper));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPosPPCNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PosPPCNo", xmlWriter);
                             

                                          if (localPosPPCNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPosPPCNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPosShippercodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PosShippercode", xmlWriter);
                             

                                          if (localPosShippercode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPosShippercode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrepaidCollectTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PrepaidCollect", xmlWriter);
                             

                                          if (localPrepaidCollect==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrepaidCollect);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeAddr1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeAddr1", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeAddr1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeAddr2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeAddr2", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeAddr2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeAddr3CityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeAddr3City", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeAddr3City==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeAddr3City);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeMobileTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeMobile", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeMobile==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeName", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneePincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneePincode", xmlWriter);
                             

                                          if (localPreviousAWBConsigneePincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneePincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeSenderAtnTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeSenderAtn", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeSenderAtn==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeSenderAtn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBConsigneeTelephoneTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBConsigneeTelephone", xmlWriter);
                             

                                          if (localPreviousAWBConsigneeTelephone==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBConsigneeTelephone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBGetDataTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBGetData", xmlWriter);
                             

                                          if (localPreviousAWBGetData==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBGetData);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperAddr1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperAddr1", xmlWriter);
                             

                                          if (localPreviousAWBShipperAddr1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperAddr2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperAddr2", xmlWriter);
                             

                                          if (localPreviousAWBShipperAddr2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperAddr3CityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperAddr3City", xmlWriter);
                             

                                          if (localPreviousAWBShipperAddr3City==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperAddr3City);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperMobileTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperMobile", xmlWriter);
                             

                                          if (localPreviousAWBShipperMobile==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperName", xmlWriter);
                             

                                          if (localPreviousAWBShipperName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperPincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperPincode", xmlWriter);
                             

                                          if (localPreviousAWBShipperPincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperPincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperSenderAtnTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperSenderAtn", xmlWriter);
                             

                                          if (localPreviousAWBShipperSenderAtn==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperSenderAtn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousAWBShipperTelephoneTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousAWBShipperTelephone", xmlWriter);
                             

                                          if (localPreviousAWBShipperTelephone==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousAWBShipperTelephone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreviousShipperCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PreviousShipperCode", xmlWriter);
                             

                                          if (localPreviousShipperCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreviousShipperCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrintAwbTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PrintAwb", xmlWriter);
                             

                                          if (localPrintAwb==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrintAwb);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrintModeTracker){
                                            if (localPrintMode==null){
                                                 throw new org.apache.axis2.databinding.ADBException("PrintMode cannot be null!!");
                                            }
                                           localPrintMode.serialize(new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PrintMode"),
                                               xmlWriter);
                                        } if (localPrintingTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "PrintingType", xmlWriter);
                             

                                          if (localPrintingType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrintingType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ProductCode", xmlWriter);
                             

                                          if (localProductCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductTypeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ProductType", xmlWriter);
                             

                                          if (localProductType==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPromocodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Promocode", xmlWriter);
                             

                                          if (localPromocode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPromocode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRasChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RasCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localRasCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("RasCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRasCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRateClassTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RateClass", xmlWriter);
                             

                                          if (localRateClass==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRateClass);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReferenceAddnlRefPrintTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ReferenceAddnlRefPrint", xmlWriter);
                             

                                          if (localReferenceAddnlRefPrint==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReferenceAddnlRefPrint);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReferenceNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ReferenceNo", xmlWriter);
                             

                                          if (localReferenceNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReferenceNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRegulatoryTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Regulatory", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localRegulatory)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Regulatory cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRegulatory));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRegulatoryAgentCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RegulatoryAgentCarrier", xmlWriter);
                             

                                          if (localRegulatoryAgentCarrier==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRegulatoryAgentCarrier);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRiskChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RiskCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localRiskCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("RiskCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRtoAreaTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RtoArea", xmlWriter);
                             

                                          if (localRtoArea==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRtoArea);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRtoCodDestinationTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RtoCodDestination", xmlWriter);
                             

                                          if (localRtoCodDestination==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRtoCodDestination);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRtoCodDestinationPincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RtoCodDestinationPincode", xmlWriter);
                             

                                          if (localRtoCodDestinationPincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRtoCodDestinationPincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRtoCodDestinationScTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RtoCodDestinationSc", xmlWriter);
                             

                                          if (localRtoCodDestinationSc==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRtoCodDestinationSc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRtoCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "RtoCode", xmlWriter);
                             

                                          if (localRtoCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRtoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSFCPrepaidValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SFCPrepaidValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localSFCPrepaidValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("SFCPrepaidValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSFCPrepaidValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSFCValueTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SFCValue", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localSFCValue)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("SFCValue cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSFCValue));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSalesTaxTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SalesTax", xmlWriter);
                             

                                          if (localSalesTax==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSalesTax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperAddr1Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperAddr1", xmlWriter);
                             

                                          if (localShipperAddr1==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperAddr2Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperAddr2", xmlWriter);
                             

                                          if (localShipperAddr2==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperAddr3CityTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperAddr3City", xmlWriter);
                             

                                          if (localShipperAddr3City==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperAddr3City);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperCode", xmlWriter);
                             

                                          if (localShipperCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperMobileNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperMobileNo", xmlWriter);
                             

                                          if (localShipperMobileNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperMobileNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperNameTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperName", xmlWriter);
                             

                                          if (localShipperName==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperPhoneNoTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperPhoneNo", xmlWriter);
                             

                                          if (localShipperPhoneNo==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperPhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperPincodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperPincode", xmlWriter);
                             

                                          if (localShipperPincode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperPincode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShipperSenderAtnTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ShipperSenderAtn", xmlWriter);
                             

                                          if (localShipperSenderAtn==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShipperSenderAtn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSmartBoxTypeATracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SmartBoxTypeA", xmlWriter);
                             
                                               if (localSmartBoxTypeA==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("SmartBoxTypeA cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSmartBoxTypeA));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSmartBoxTypeBTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SmartBoxTypeB", xmlWriter);
                             
                                               if (localSmartBoxTypeB==java.lang.Integer.MIN_VALUE) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("SmartBoxTypeB cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSmartBoxTypeB));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSpecHandlingTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SpecHandling", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localSpecHandling)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("SpecHandling cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSpecHandling));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSpecialInstructionsTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SpecialInstructions", xmlWriter);
                             

                                          if (localSpecialInstructions==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSpecialInstructions);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatisticalTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Statistical", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localStatistical)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Statistical cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatistical));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatisticalAgentCarrierTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "StatisticalAgentCarrier", xmlWriter);
                             

                                          if (localStatisticalAgentCarrier==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatisticalAgentCarrier);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "SubCode", xmlWriter);
                             

                                          if (localSubCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTddChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "TddCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localTddCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("TddCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTddCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTemporaryDestinationServiceCentreTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "TemporaryDestinationServiceCentre", xmlWriter);
                             

                                          if (localTemporaryDestinationServiceCentre==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTemporaryDestinationServiceCentre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTokenNumberTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "TokenNumber", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localTokenNumber)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("TokenNumber cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTokenNumber));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotalAmountTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "TotalAmount", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localTotalAmount)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("TotalAmount cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalAmount));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTransactionCodeTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "TransactionCode", xmlWriter);
                             

                                          if (localTransactionCode==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTransactionCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localValChargesTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "ValCharges", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localValCharges)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("ValCharges cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValCharges));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWeightTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "Weight", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localWeight)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("Weight cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWeight));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsrto074Tracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "isrto074", xmlWriter);
                             

                                          if (localIsrto074==null){
                                              // write the nil attribute
                                              
                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsrto074);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNetAmountp2PTracker){
                                    namespace = "http://schemas.datacontract.org/2004/07/BD.Entities.Area";
                                    writeStartElement(null, namespace, "netAmountp2p", xmlWriter);
                             
                                               if (java.lang.Double.isNaN(localNetAmountp2P)) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("netAmountp2p cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNetAmountp2P));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://schemas.datacontract.org/2004/07/BD.Entities.Area")){
                return "ns10";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(writerPrefix, localPart, namespace);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeAttribute(writerPrefix, namespace,attName,attValue);
            } else {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
                xmlWriter.writeAttribute(prefix, namespace,attName,attValue);
            }
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                xmlWriter.writeAttribute(registerPrefix(xmlWriter, namespace), namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(attributePrefix, namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{
        private static org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory.getLog(Factory.class);

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AWBDataEntry parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AWBDataEntry object =
                new AWBDataEntry();

            int event;
            javax.xml.namespace.QName currentQName = null;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                currentQName = reader.getName();
                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AWBDataEntry".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AWBDataEntry)org.tempuri.imports.ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Common","Handheld").equals(reader.getName()) || new javax.xml.namespace.QName("","Handheld").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHandheld(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Common","Location").equals(reader.getName()) || new javax.xml.namespace.QName("","Location").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Common","LoginId").equals(reader.getName()) || new javax.xml.namespace.QName("","LoginId").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLoginId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ModifiedDate").equals(reader.getName()) || new javax.xml.namespace.QName("","ModifiedDate").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ModifiedDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setModifiedDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AWBFee").equals(reader.getName()) || new javax.xml.namespace.QName("","AWBFee").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"AWBFee" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAWBFee(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setAWBFee(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AWBFeeAgentCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","AWBFeeAgentCarrier").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAWBFeeAgentCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ActualWeight").equals(reader.getName()) || new javax.xml.namespace.QName("","ActualWeight").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ActualWeight" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActualWeight(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setActualWeight(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AdditionalRefNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","AdditionalRefNumber").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAdditionalRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AgentCode").equals(reader.getName()) || new javax.xml.namespace.QName("","AgentCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAgentCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AmountToCollect").equals(reader.getName()) || new javax.xml.namespace.QName("","AmountToCollect").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"AmountToCollect" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmountToCollect(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setAmountToCollect(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ApexPrepaidValue").equals(reader.getName()) || new javax.xml.namespace.QName("","ApexPrepaidValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ApexPrepaidValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApexPrepaidValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setApexPrepaidValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ApexValue").equals(reader.getName()) || new javax.xml.namespace.QName("","ApexValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ApexValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApexValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setApexValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AwbDate").equals(reader.getName()) || new javax.xml.namespace.QName("","AwbDate").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAwbDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","AwbNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","AwbNumber").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAwbNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BaggedInLocation").equals(reader.getName()) || new javax.xml.namespace.QName("","BaggedInLocation").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBaggedInLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BatchCount").equals(reader.getName()) || new javax.xml.namespace.QName("","BatchCount").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBatchCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BatchNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","BatchNumber").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBatchNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BillThirdPartyAreaCode").equals(reader.getName()) || new javax.xml.namespace.QName("","BillThirdPartyAreaCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBillThirdPartyAreaCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BillThirdPartyCustomerCode").equals(reader.getName()) || new javax.xml.namespace.QName("","BillThirdPartyCustomerCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBillThirdPartyCustomerCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","BulkEntry").equals(reader.getName()) || new javax.xml.namespace.QName("","BulkEntry").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBulkEntry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CafCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","CafCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CafCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCafCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setCafCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CardCode").equals(reader.getName()) || new javax.xml.namespace.QName("","CardCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CardExpiryDate").equals(reader.getName()) || new javax.xml.namespace.QName("","CardExpiryDate").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CardHolderName").equals(reader.getName()) || new javax.xml.namespace.QName("","CardHolderName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardHolderName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Cartage").equals(reader.getName()) || new javax.xml.namespace.QName("","Cartage").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Cartage" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCartage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setCartage(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CartageAgentCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","CartageAgentCarrier").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCartageAgentCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CashMemoNo").equals(reader.getName()) || new javax.xml.namespace.QName("","CashMemoNo").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CashMemoNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCashMemoNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setCashMemoNo(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CftRate").equals(reader.getName()) || new javax.xml.namespace.QName("","CftRate").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CftRate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCftRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setCftRate(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ChargeWeight").equals(reader.getName()) || new javax.xml.namespace.QName("","ChargeWeight").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ChargeWeight" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChargeWeight(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setChargeWeight(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ColctCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","ColctCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ColctCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setColctCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setColctCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommValue").equals(reader.getName()) || new javax.xml.namespace.QName("","CommValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CommValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setCommValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommodityCode").equals(reader.getName()) || new javax.xml.namespace.QName("","CommodityCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommodityCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommodityDescription1").equals(reader.getName()) || new javax.xml.namespace.QName("","CommodityDescription1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommodityDescription1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommodityDescription2").equals(reader.getName()) || new javax.xml.namespace.QName("","CommodityDescription2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommodityDescription2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommodityDescription3").equals(reader.getName()) || new javax.xml.namespace.QName("","CommodityDescription3").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommodityDescription3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CommodityName").equals(reader.getName()) || new javax.xml.namespace.QName("","CommodityName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCommodityName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAddr1").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAddr1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAddr2").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAddr2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAddr3City").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAddr3City").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAddr3City(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateAddr1").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateAddr1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateAddr2").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateAddr2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateAddr3").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateAddr3").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateAddr3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateAttn").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateAttn").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateAttn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateCity").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateCity").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternateName").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternateName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternateName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternatePhoneNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternatePhoneNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternatePhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeAlternatePincode").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeAlternatePincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeAlternatePincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeCode").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeMobileNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeMobileNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeMobileNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeName").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneePhoneNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneePhoneNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneePhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneePincode").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneePincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneePincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ConsigneeSenderAtn").equals(reader.getName()) || new javax.xml.namespace.QName("","ConsigneeSenderAtn").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsigneeSenderAtn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CountryName").equals(reader.getName()) || new javax.xml.namespace.QName("","CountryName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountryName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Credit").equals(reader.getName()) || new javax.xml.namespace.QName("","Credit").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCredit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CreditCardNo").equals(reader.getName()) || new javax.xml.namespace.QName("","CreditCardNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCreditCardNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CurrencyCode").equals(reader.getName()) || new javax.xml.namespace.QName("","CurrencyCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrencyCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","CustomerCode").equals(reader.getName()) || new javax.xml.namespace.QName("","CustomerCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DCCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","DCCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DCCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDCCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDCCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DPValue").equals(reader.getName()) || new javax.xml.namespace.QName("","DPValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DPValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDPValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDPValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DataLoggerType").equals(reader.getName()) || new javax.xml.namespace.QName("","DataLoggerType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDataLoggerType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DdpShipment").equals(reader.getName()) || new javax.xml.namespace.QName("","DdpShipment").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDdpShipment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DeclaredValue").equals(reader.getName()) || new javax.xml.namespace.QName("","DeclaredValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DeclaredValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDeclaredValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDeclaredValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DeliveryDate").equals(reader.getName()) || new javax.xml.namespace.QName("","DeliveryDate").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDeliveryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DestinationArea").equals(reader.getName()) || new javax.xml.namespace.QName("","DestinationArea").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDestinationArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DestinationServiceCentre").equals(reader.getName()) || new javax.xml.namespace.QName("","DestinationServiceCentre").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDestinationServiceCentre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DetentionCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","DetentionCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DetentionCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDetentionCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDetentionCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DhlAccountNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","DhlAccountNumber").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDhlAccountNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimBreadth").equals(reader.getName()) || new javax.xml.namespace.QName("","DimBreadth").equals(reader.getName()) ){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDimBreadth(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDimBreadth(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimHeight").equals(reader.getName()) || new javax.xml.namespace.QName("","DimHeight").equals(reader.getName()) ){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDimHeight(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDimHeight(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimLength").equals(reader.getName()) || new javax.xml.namespace.QName("","DimLength").equals(reader.getName()) ){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDimLength(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDimLength(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfdouble.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimPieces").equals(reader.getName()) || new javax.xml.namespace.QName("","DimPieces").equals(reader.getName()) ){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setDimPieces(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setDimPieces(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfint.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DimWeight").equals(reader.getName()) || new javax.xml.namespace.QName("","DimWeight").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DimWeight" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDimWeight(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDimWeight(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DocCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","DocCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DocCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDocCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDocCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DodAmount").equals(reader.getName()) || new javax.xml.namespace.QName("","DodAmount").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DodAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDodAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDodAmount(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DryIceWeight").equals(reader.getName()) || new javax.xml.namespace.QName("","DryIceWeight").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DryIceWeight" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDryIceWeight(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDryIceWeight(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DueAgent").equals(reader.getName()) || new javax.xml.namespace.QName("","DueAgent").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DueAgent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDueAgent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDueAgent(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DueCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","DueCarrier").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DueCarrier" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDueCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDueCarrier(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","DutyPaidAmount").equals(reader.getName()) || new javax.xml.namespace.QName("","DutyPaidAmount").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"DutyPaidAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDutyPaidAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setDutyPaidAmount(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EccCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","EccCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EccCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEccCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setEccCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EmailId").equals(reader.getName()) || new javax.xml.namespace.QName("","EmailId").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmailId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EmployeeCode").equals(reader.getName()) || new javax.xml.namespace.QName("","EmployeeCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployeeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EsaCftRate").equals(reader.getName()) || new javax.xml.namespace.QName("","EsaCftRate").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EsaCftRate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEsaCftRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setEsaCftRate(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EsaChargesGrandTotal").equals(reader.getName()) || new javax.xml.namespace.QName("","EsaChargesGrandTotal").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EsaChargesGrandTotal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEsaChargesGrandTotal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setEsaChargesGrandTotal(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EsaChargesServiceTaxPlusCess").equals(reader.getName()) || new javax.xml.namespace.QName("","EsaChargesServiceTaxPlusCess").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EsaChargesServiceTaxPlusCess" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEsaChargesServiceTaxPlusCess(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setEsaChargesServiceTaxPlusCess(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EsaChargesTotal").equals(reader.getName()) || new javax.xml.namespace.QName("","EsaChargesTotal").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EsaChargesTotal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEsaChargesTotal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setEsaChargesTotal(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","EsaCode").equals(reader.getName()) || new javax.xml.namespace.QName("","EsaCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEsaCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ExchangeRate").equals(reader.getName()) || new javax.xml.namespace.QName("","ExchangeRate").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ExchangeRate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExchangeRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setExchangeRate(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ExchangeUnits").equals(reader.getName()) || new javax.xml.namespace.QName("","ExchangeUnits").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ExchangeUnits" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExchangeUnits(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setExchangeUnits(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FSAmount").equals(reader.getName()) || new javax.xml.namespace.QName("","FSAmount").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"FSAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFSAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setFSAmount(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FavouringName").equals(reader.getName()) || new javax.xml.namespace.QName("","FavouringName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFavouringName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Flfm").equals(reader.getName()) || new javax.xml.namespace.QName("","Flfm").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlfm(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FocCode").equals(reader.getName()) || new javax.xml.namespace.QName("","FocCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFocCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FocDescription").equals(reader.getName()) || new javax.xml.namespace.QName("","FocDescription").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFocDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FodCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","FodCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"FodCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFodCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setFodCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FodCodFlag").equals(reader.getName()) || new javax.xml.namespace.QName("","FodCodFlag").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFodCodFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","FovType").equals(reader.getName()) || new javax.xml.namespace.QName("","FovType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFovType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Frieght").equals(reader.getName()) || new javax.xml.namespace.QName("","Frieght").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Frieght" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFrieght(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setFrieght(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","HCCharge").equals(reader.getName()) || new javax.xml.namespace.QName("","HCCharge").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"HCCharge" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHCCharge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setHCCharge(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IATACode").equals(reader.getName()) || new javax.xml.namespace.QName("","IATACode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIATACode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ISDGSHIPMENT").equals(reader.getName()) || new javax.xml.namespace.QName("","ISDGSHIPMENT").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setISDGSHIPMENT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ImportType").equals(reader.getName()) || new javax.xml.namespace.QName("","ImportType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImportType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IncotermCode").equals(reader.getName()) || new javax.xml.namespace.QName("","IncotermCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncotermCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IncotermDescription").equals(reader.getName()) || new javax.xml.namespace.QName("","IncotermDescription").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncotermDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","InrValue").equals(reader.getName()) || new javax.xml.namespace.QName("","InrValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"InrValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInrValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setInrValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","InvoiceNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","InvoiceNumber").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInvoiceNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsBondedATA").equals(reader.getName()) || new javax.xml.namespace.QName("","IsBondedATA").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsBondedATA" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsBondedATA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsCashCreditShipment").equals(reader.getName()) || new javax.xml.namespace.QName("","IsCashCreditShipment").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsCashCreditShipment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsCashCreditShipment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsCollectDuty").equals(reader.getName()) || new javax.xml.namespace.QName("","IsCollectDuty").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsCollectDuty" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsCollectDuty(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsInsuredShipment").equals(reader.getName()) || new javax.xml.namespace.QName("","IsInsuredShipment").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsInsuredShipment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsInsuredShipment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsInternationalAnnexure").equals(reader.getName()) || new javax.xml.namespace.QName("","IsInternationalAnnexure").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsInternationalAnnexure" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsInternationalAnnexure(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsOverHandlingShipment").equals(reader.getName()) || new javax.xml.namespace.QName("","IsOverHandlingShipment").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsOverHandlingShipment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsOverHandlingShipment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsPrepaidCollect").equals(reader.getName()) || new javax.xml.namespace.QName("","IsPrepaidCollect").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsPrepaidCollect" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsPrepaidCollect(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsPriority").equals(reader.getName()) || new javax.xml.namespace.QName("","IsPriority").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsPriority" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsRTOIMDTLY").equals(reader.getName()) || new javax.xml.namespace.QName("","IsRTOIMDTLY").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsRTOIMDTLY(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsSaturdayDelivery").equals(reader.getName()) || new javax.xml.namespace.QName("","IsSaturdayDelivery").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsSaturdayDelivery" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsSaturdayDelivery(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","IsThermalCodSelected").equals(reader.getName()) || new javax.xml.namespace.QName("","IsThermalCodSelected").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IsThermalCodSelected" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsThermalCodSelected(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","KGPound").equals(reader.getName()) || new javax.xml.namespace.QName("","KGPound").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKGPound(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","LocationCode").equals(reader.getName()) || new javax.xml.namespace.QName("","LocationCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocationCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MaximumReferenceNumberLength").equals(reader.getName()) || new javax.xml.namespace.QName("","MaximumReferenceNumberLength").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"MaximumReferenceNumberLength" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaximumReferenceNumberLength(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setMaximumReferenceNumberLength(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MinimumReferenceNumberLength").equals(reader.getName()) || new javax.xml.namespace.QName("","MinimumReferenceNumberLength").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"MinimumReferenceNumberLength" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMinimumReferenceNumberLength(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setMinimumReferenceNumberLength(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MiscCharges1").equals(reader.getName()) || new javax.xml.namespace.QName("","MiscCharges1").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"MiscCharges1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMiscCharges1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setMiscCharges1(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MiscCharges1AgentCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","MiscCharges1AgentCarrier").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMiscCharges1AgentCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Mode").equals(reader.getName()) || new javax.xml.namespace.QName("","Mode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","MpsNumbers").equals(reader.getName()) || new javax.xml.namespace.QName("","MpsNumbers").equals(reader.getName()) ){
                                
                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setMpsNumbers(null);
                                          reader.next();
                                            
                                            reader.next();
                                          
                                      }else{
                                    
                                                object.setMpsNumbers(com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring.Factory.parse(reader));
                                              
                                        reader.next();
                                    }
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Nawbid").equals(reader.getName()) || new javax.xml.namespace.QName("","Nawbid").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Nawbid" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNawbid(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setNawbid(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","NumberOfDCGiven").equals(reader.getName()) || new javax.xml.namespace.QName("","NumberOfDCGiven").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"NumberOfDCGiven" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumberOfDCGiven(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setNumberOfDCGiven(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OdaCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","OdaCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"OdaCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOdaCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setOdaCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OdaFlag").equals(reader.getName()) || new javax.xml.namespace.QName("","OdaFlag").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOdaFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OldWBCMode").equals(reader.getName()) || new javax.xml.namespace.QName("","OldWBCMode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOldWBCMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OriginArea").equals(reader.getName()) || new javax.xml.namespace.QName("","OriginArea").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOriginArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OriginServiceCenter").equals(reader.getName()) || new javax.xml.namespace.QName("","OriginServiceCenter").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOriginServiceCenter(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","OriginalServiceCentre").equals(reader.getName()) || new javax.xml.namespace.QName("","OriginalServiceCentre").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOriginalServiceCentre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PUDate").equals(reader.getName()) || new javax.xml.namespace.QName("","PUDate").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPUDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PackageType").equals(reader.getName()) || new javax.xml.namespace.QName("","PackageType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPackageType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Packages").equals(reader.getName()) || new javax.xml.namespace.QName("","Packages").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Packages" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPackages(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setPackages(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PaperworkDescription1").equals(reader.getName()) || new javax.xml.namespace.QName("","PaperworkDescription1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPaperworkDescription1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PaperworkDescription2").equals(reader.getName()) || new javax.xml.namespace.QName("","PaperworkDescription2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPaperworkDescription2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PaperworkDescription3").equals(reader.getName()) || new javax.xml.namespace.QName("","PaperworkDescription3").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPaperworkDescription3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PayableAt").equals(reader.getName()) || new javax.xml.namespace.QName("","PayableAt").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPayableAt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PickupDate").equals(reader.getName()) || new javax.xml.namespace.QName("","PickupDate").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPickupDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PickupEmpCode").equals(reader.getName()) || new javax.xml.namespace.QName("","PickupEmpCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPickupEmpCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PickupEmployeeName").equals(reader.getName()) || new javax.xml.namespace.QName("","PickupEmployeeName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPickupEmployeeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PickupTime").equals(reader.getName()) || new javax.xml.namespace.QName("","PickupTime").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPickupTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PickupWalkin").equals(reader.getName()) || new javax.xml.namespace.QName("","PickupWalkin").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPickupWalkin(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Pieces").equals(reader.getName()) || new javax.xml.namespace.QName("","Pieces").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPieces(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PosDiscount").equals(reader.getName()) || new javax.xml.namespace.QName("","PosDiscount").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"PosDiscount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPosDiscount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setPosDiscount(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PosDiscper").equals(reader.getName()) || new javax.xml.namespace.QName("","PosDiscper").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"PosDiscper" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPosDiscper(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setPosDiscper(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PosPPCNo").equals(reader.getName()) || new javax.xml.namespace.QName("","PosPPCNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPosPPCNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PosShippercode").equals(reader.getName()) || new javax.xml.namespace.QName("","PosShippercode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPosShippercode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PrepaidCollect").equals(reader.getName()) || new javax.xml.namespace.QName("","PrepaidCollect").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrepaidCollect(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeAddr1").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeAddr1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeAddr2").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeAddr2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeAddr3City").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeAddr3City").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeAddr3City(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeMobile").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeMobile").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeName").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneePincode").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneePincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneePincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeSenderAtn").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeSenderAtn").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeSenderAtn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBConsigneeTelephone").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBConsigneeTelephone").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBConsigneeTelephone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBGetData").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBGetData").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBGetData(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperAddr1").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperAddr1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperAddr2").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperAddr2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperAddr3City").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperAddr3City").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperAddr3City(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperMobile").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperMobile").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperName").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperPincode").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperPincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperPincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperSenderAtn").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperSenderAtn").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperSenderAtn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousAWBShipperTelephone").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousAWBShipperTelephone").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousAWBShipperTelephone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PreviousShipperCode").equals(reader.getName()) || new javax.xml.namespace.QName("","PreviousShipperCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreviousShipperCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PrintAwb").equals(reader.getName()) || new javax.xml.namespace.QName("","PrintAwb").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrintAwb(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PrintMode").equals(reader.getName()) || new javax.xml.namespace.QName("","PrintMode").equals(reader.getName()) ){
                                
                                                object.setPrintMode(org.datacontract.schemas._2004._07.bd_entities_enums_operation.PrintingMode.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","PrintingType").equals(reader.getName()) || new javax.xml.namespace.QName("","PrintingType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrintingType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ProductCode").equals(reader.getName()) || new javax.xml.namespace.QName("","ProductCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ProductType").equals(reader.getName()) || new javax.xml.namespace.QName("","ProductType").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Promocode").equals(reader.getName()) || new javax.xml.namespace.QName("","Promocode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPromocode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RasCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","RasCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"RasCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRasCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setRasCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RateClass").equals(reader.getName()) || new javax.xml.namespace.QName("","RateClass").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRateClass(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ReferenceAddnlRefPrint").equals(reader.getName()) || new javax.xml.namespace.QName("","ReferenceAddnlRefPrint").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReferenceAddnlRefPrint(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ReferenceNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ReferenceNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReferenceNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Regulatory").equals(reader.getName()) || new javax.xml.namespace.QName("","Regulatory").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Regulatory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRegulatory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setRegulatory(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RegulatoryAgentCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","RegulatoryAgentCarrier").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRegulatoryAgentCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RiskCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","RiskCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"RiskCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRiskCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setRiskCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RtoArea").equals(reader.getName()) || new javax.xml.namespace.QName("","RtoArea").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRtoArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RtoCodDestination").equals(reader.getName()) || new javax.xml.namespace.QName("","RtoCodDestination").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRtoCodDestination(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RtoCodDestinationPincode").equals(reader.getName()) || new javax.xml.namespace.QName("","RtoCodDestinationPincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRtoCodDestinationPincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RtoCodDestinationSc").equals(reader.getName()) || new javax.xml.namespace.QName("","RtoCodDestinationSc").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRtoCodDestinationSc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","RtoCode").equals(reader.getName()) || new javax.xml.namespace.QName("","RtoCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRtoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SFCPrepaidValue").equals(reader.getName()) || new javax.xml.namespace.QName("","SFCPrepaidValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SFCPrepaidValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSFCPrepaidValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setSFCPrepaidValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SFCValue").equals(reader.getName()) || new javax.xml.namespace.QName("","SFCValue").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SFCValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSFCValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setSFCValue(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SalesTax").equals(reader.getName()) || new javax.xml.namespace.QName("","SalesTax").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSalesTax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperAddr1").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperAddr1").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperAddr2").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperAddr2").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperAddr3City").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperAddr3City").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperAddr3City(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperCode").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperMobileNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperMobileNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperMobileNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperName").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperName").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperPhoneNo").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperPhoneNo").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperPhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperPincode").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperPincode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperPincode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ShipperSenderAtn").equals(reader.getName()) || new javax.xml.namespace.QName("","ShipperSenderAtn").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShipperSenderAtn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SmartBoxTypeA").equals(reader.getName()) || new javax.xml.namespace.QName("","SmartBoxTypeA").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SmartBoxTypeA" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSmartBoxTypeA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setSmartBoxTypeA(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SmartBoxTypeB").equals(reader.getName()) || new javax.xml.namespace.QName("","SmartBoxTypeB").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SmartBoxTypeB" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSmartBoxTypeB(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setSmartBoxTypeB(java.lang.Integer.MIN_VALUE);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SpecHandling").equals(reader.getName()) || new javax.xml.namespace.QName("","SpecHandling").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SpecHandling" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSpecHandling(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setSpecHandling(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SpecialInstructions").equals(reader.getName()) || new javax.xml.namespace.QName("","SpecialInstructions").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSpecialInstructions(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Statistical").equals(reader.getName()) || new javax.xml.namespace.QName("","Statistical").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Statistical" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatistical(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setStatistical(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","StatisticalAgentCarrier").equals(reader.getName()) || new javax.xml.namespace.QName("","StatisticalAgentCarrier").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatisticalAgentCarrier(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","SubCode").equals(reader.getName()) || new javax.xml.namespace.QName("","SubCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","TddCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","TddCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TddCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTddCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setTddCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","TemporaryDestinationServiceCentre").equals(reader.getName()) || new javax.xml.namespace.QName("","TemporaryDestinationServiceCentre").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTemporaryDestinationServiceCentre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","TokenNumber").equals(reader.getName()) || new javax.xml.namespace.QName("","TokenNumber").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TokenNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTokenNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setTokenNumber(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","TotalAmount").equals(reader.getName()) || new javax.xml.namespace.QName("","TotalAmount").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TotalAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotalAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setTotalAmount(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","TransactionCode").equals(reader.getName()) || new javax.xml.namespace.QName("","TransactionCode").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTransactionCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","ValCharges").equals(reader.getName()) || new javax.xml.namespace.QName("","ValCharges").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ValCharges" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setValCharges(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setValCharges(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","Weight").equals(reader.getName()) || new javax.xml.namespace.QName("","Weight").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Weight" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWeight(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setWeight(java.lang.Double.NaN);
                                           
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","isrto074").equals(reader.getName()) || new javax.xml.namespace.QName("","isrto074").equals(reader.getName()) ){
                                
                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsrto074(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                            
                                       } else {
                                           
                                           
                                           reader.getElementText(); // throw away text nodes if any.
                                       }
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://schemas.datacontract.org/2004/07/BD.Entities.Area","netAmountp2p").equals(reader.getName()) || new javax.xml.namespace.QName("","netAmountp2p").equals(reader.getName()) ){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"netAmountp2p" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNetAmountp2P(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                               object.setNetAmountp2P(java.lang.Double.NaN);
                                           
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // 2 - A start element we are not expecting indicates a trailing invalid property
                                
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    